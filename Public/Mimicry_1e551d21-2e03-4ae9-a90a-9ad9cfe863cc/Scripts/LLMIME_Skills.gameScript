INIT

EVENTS

//REGION WISH
EVENT LLMIME_Wish_ReduceHealth
VARS
	CHARACTER:_Target
	CHARACTER:_Caster
	FLOAT:_HealPercentage
	FLOAT:_CasterStartingVit
	FLOAT:_CasterVit
ON
	OnCharacterCharacterEvent(_Caster, _Target, "Mimicry_Events_OnWishCast")
ACTIONS
IF "c1&c2&c3"
	GetVar(_HealPercentage, _Caster, "Mimicry_Wish_HealPercentage")
	CharacterGetStat(_CasterStartingVit, _Caster, VitalityPoints)
	CharacterGetStat(_CasterVit, _Caster, Vitality)
THEN
	SetVar(_Caster, "Mimicry_Wish_StartingHealth", _CasterStartingVit)
	Divide(_CasterVit, 2)
	SetHealth(_Caster, _CasterVit)
	CharacterCharacterEvent(_Caster, _Target, "Mimicry_Events_WishDelay")
ENDIF

EVENT LLMIME_Wish_ApplyHealing
VARS
	CHARACTER:_Target
	CHARACTER:_Caster
	FLOAT:_HealPercentage
	FLOAT:_CasterStartingVit
	FLOAT:_CasterVit
	FLOAT:_CasterVitMax
	FLOAT:_HealAmount
	FLOAT:_TargetVit
	FLOAT:_TargetStartingVit
	FLOAT:_TargetVitMax
	FLOAT:_LostHealth
	INT:_LostHealthInt
	STRING:_Str
	FIXEDSTRING:_DisplayMessage
ON	
	OnCharacterCharacterEvent(_Caster, _Target, "Mimicry_Events_HealWishTarget")
ACTIONS
IF "c1&c2&c3&c4&c5&c6&c7"
	GetVar(_CasterStartingVit, _Caster, "Mimicry_Wish_StartingHealth")
	CharacterGetStat(_LostHealth, _Caster, VitalityPoints)
	CharacterGetStat(_CasterVit, _Caster, VitalityPoints)
	CharacterGetStat(_TargetVit, _Target, Vitality)
	CharacterGetStat(_TargetStartingVit, _Target, VitalityPoints)
	CharacterGetStat(_CasterVitMax, _Caster, VitalityMax)
	CharacterGetStat(_TargetVitMax, _Target, VitalityMax)
THEN
	Subtract(_LostHealth, _CasterStartingVit)
	IF "c1"
		IsLessThen(_LostHealth, 0)
	THEN
		Multiply(_LostHealth, -1)
	ENDIF
	//Print(_Str, "Lost [1] vitality. Health: [2]/[3]", _LostHealth, _CasterVit, _CasterVitMax)
	Cast(_LostHealthInt, _LostHealth)
	Print(_Str, "wished away <font color='#FF0000'>[1] vitality</font>", _LostHealthInt)
	Cast(_DisplayMessage, _Str)
	DisplayCombatInfoText(_Caster, _DisplayMessage, 0)
	DisplayText(_Caster, "", 0)

	Set(_HealAmount, _LostHealth)
	Multiply(_HealAmount, 2)
	//Add(_HealAmount, _TargetStartingVit)
	
	SetFlag(_Target, "Mimicry_Wish_CheckHealthResult")
	
	IF "c1|c2"
		IsGreaterThen(_HealAmount, _TargetVitMax)
		IsEqual(_HealAmount, _TargetVitMax)
	THEN
		SetHealth(_Target, 1)
	ELSE
		Divide(_HealAmount, _TargetVitMax)
		IF "c1"
			IsLessThen(_HealAmount, 0)
		THEN
			Multiply(_HealAmount, -1)
		ELIF "c1"
			IsGreaterThen(_HealAmount, 1)
		THEN
			Set(_HealAmount, 1)
		ENDIF

		IF "c1"
			IsEqual(_HealAmount, 0)
		THEN
			Set(_HealAmount, 0.001)
		ENDIF
		CharacterHeal(_Target, _HealAmount)
		/*Print(_Str, "Healed [1]% vitality.", _HealAmount)
		Cast(_DisplayMessage, _Str)
		DisplayCombatInfoText(_Caster, _DisplayMessage, 0)
		DisplayText(_Caster, "", 0)*/
	ENDIF
	StatusText(_Target, "<font color='#73f6ff' size='20'>Wish</font>")
	//CharacterPlayEffect(_Target, "LLMIME_FX_Skills_Wish_Cast_Target_Root_01", "Dummy_Root")
	
ENDIF
//END_REGION

//REGION FINAL_WISH
EVENT LLMIME_FinalWish_Resurrected
VARS
	CHARACTER:_Character
	CHARACTER:_Caster
	FLOAT:_Vitality
	FLOAT:_VitalityMax
ON
	OnCharacterCharacterEvent(_Character, _Caster, "Mimicry_Events_RevivedByFinalWish")
ACTIONS
	CharacterApplyStatus(_Character, LLMIME_FINAL_WISH_BUFF, -1, 1, _Caster)
/*
IF "c1&c2"
	CharacterGetStat(_Vitality, _Character, Vitality)
	CharacterGetStat(_VitalityMax, _Character, VitalityMax)
THEN
	Divide(_Vitality, _VitalityMax)
	Set(_VitalityMax, 0.5)
	Subtract(_VitalityMax, _Vitality)
	//SetHealth(_Character, _VitalityMax)
ENDIF
*/

EVENT LLMIME_FinalWish_Remove_Buff_A
VARS
	CHARACTER:_Character
ON
	OnTurn(_Character, _)
	OnLeftCombat(_Character, _)
	OnCharacterEvent(_Character, "Mimcry_Events_FinalWish_RemoveStatus")
ACTIONS
IF "c1"
	CharacterHasStatus(_Character, LLMIME_FINAL_WISH_BUFF)
THEN
	CharacterRemoveStatus(_Character, LLMIME_FINAL_WISH_BUFF)
ENDIF
IF "c1"
	HasFlag(_Character, "Mimicry_FinalWish_RemovingStatus")
THEN
	ClearFlag(_Character, "Mimicry_FinalWish_RemovingStatus")
ENDIF

EVENT LLMIME_FinalWish_Remove_Buff_B
VARS
	CHARACTER:_Character
	FLOAT:_Vitality
	STRING:_CompleteEvent
ON
	OnCharacterEvent(_Character, "Mimicry_Events_FinalWish_OnAttacked")
	OnCharacterVitalityChanged(_Character, _)
ACTIONS
IF "c1&c2&(c3|c4)&!c5"
	CharacterHasStatus(_Character, LLMIME_FINAL_WISH_BUFF)
	CharacterGetStat(_Vitality, _Character, VitalityPoints)
	IsEqual(_Vitality, 1)
	IsLessThen(_Vitality, 1)
	HasFlag(_Character, "Mimicry_FinalWish_RemovingStatus")
THEN
	SetFlag(_Character, "Mimicry_FinalWish_RemovingStatus")
	SetVar(_Character, "LeaderLib_Timer_CompleteEvent", STRING:"Mimcry_Events_FinalWish_RemoveStatus")
	SetVar(_Character, "LeaderLib_Timer_Delay", INT:3000)
	CharacterEvent(_Character, "LeaderLib_Commands_StartObjectTimer")
ENDIF
//END_REGION

//REGION DECOY
EVENT LLMIME_Decoy_TauntNearby
VARS
	CHARACTER:_Mime
	CHARACTER:_Decoy
ON
	OnCharacterCharacterEvent(_Mime, _Decoy, "Mimicry_Events_Decoy_TauntNearbyEnemies")
ACTIONS
	CharacterApplyStatus(_Decoy, LLMIME_APPLY_TAUNTED_AURA, 0, 1, _Mime)

EVENT LLMIME_Decoy_MimickingDisable
VARS
	CHARACTER:_Mime
ON
	OnCharacterStatusApplied(_Mime, LLMIME_DECOY_ACTIVE)
ACTIONS
IF "c1&!c2"
	IsTagged(_Mime, "Mimicry_Mime")
	CharacterHasStatus(_Mime, LLMIME_MIMICKING_DISABLED)
THEN
	CharacterApplyStatus(_Mime, LLMIME_MIMICKING_DISABLED, -1)
	SetFlag(_Mime, "Mimicry_Internal_MimickingDisabledByDecoy")
ENDIF

EVENT LLMIME_Decoy_MimickingEnable
VARS
	CHARACTER:_Mime
ON
	OnCharacterStatusRemoved(_Mime, LLMIME_DECOY_ACTIVE)
ACTIONS
IF "c1&c2&c3"
	IsTagged(_Mime, "Mimicry_Mime")
	CharacterHasStatus(_Mime, LLMIME_MIMICKING_DISABLED)
	HasFlag(_Mime, "Mimicry_Internal_MimickingDisabledByDecoy")
THEN
	CharacterRemoveStatus(_Mime, LLMIME_MIMICKING_DISABLED)
	ClearFlag(_Mime, "Mimicry_Internal_MimickingDisabledByDecoy")
ENDIF

EVENT LLMIME_Decoy_Removal
VARS
	CHARACTER:_Mime
	SKILL:_Skill
ON
	OnSkillCast(_Mime, _Skill)
	OnCharacterStartAttackObject(_, _, _, _Mime)
	OnCharacterStatusApplied(_Mime, WET) // Other statuses handled by story
	OnCharacterEvent(_Mime, "Mimicry_Events_Decoy_RemoveInvisibility")
ACTIONS
IF "c1&!c2"
	CharacterHasStatus(_Mime, LLMIME_DECOY_ACTIVE)
	IsEqual(_Skill, Shout_LLMIME_DisableMimicking)
THEN
	CharacterRemoveStatus(_Mime, LLMIME_DECOY_ACTIVE)
ENDIF
//END_REGION

//REGION DOUBLE_HIT

EVENT LLMIME_Brawler_OnCriticalHit
VARS
	CHARACTER:_Mime
	CHARACTER:_TargetCharacter
	ITEM:_TargetItem
	INT:_Roll
	INT:_StartRolling
	STRING:_Str
	FIXEDSTRING:_DebugMessage
ON
	OnCriticalHit(_Mime, _, _TargetCharacter, _TargetItem)
ACTIONS
IF "!c1&!c2&!c3&c4&c5&c6"
	HasFlag(_Mime, "Mimicry_IsMimicking")
	HasFlag(_Mime, "Mimicry_DoubleAttackDisabled")
	HasFlag(_Mime, "Mimicry_ApplyingUnarmedDamage")
	HasFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack")
	HasFlag(_Mime, "Mimicry_MimeIsUnarmed")
	CharacterHasStatus(_Mime, "LLMIME_BRAWLER_BONUS")
THEN
	GetRandomBetween(_Roll, INT:0, INT:100)
	
	//Print(_Str, "Double Hit Roll: [1]", _Roll)
	//Cast(_DebugMessage, _Str)
	//DisplayCombatInfoText(_Mime, _DebugMessage, 5.0)
	
	IF "c1&(c2|c3)"
		IsGreaterThen(_Roll, 0)
		IsLessThen(_Roll, 40)
		IsEqual(_Roll, 40)
	THEN
		IF "!c1"
			IsEqual(_TargetCharacter, null)
		THEN
			CharacterCharacterEvent(_Mime, _TargetCharacter, "Mimicry_Events_DoubleHitRollSuccess")
		ENDIF
		IF "!c1"
			IsEqual(_TargetItem, null)
		THEN
			CharacterItemEvent(_Mime, _TargetItem, "Mimicry_Events_DoubleHitRollSuccess")
		ENDIF
	ENDIF
ENDIF
//END_REGION