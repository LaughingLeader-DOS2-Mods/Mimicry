Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION BRAWLER_FIST
/*
PROC
LLMIME_Brawler_RegisterFist((CHARACTERGUID)_Mime, (ITEMGUID)_Fist)
THEN
DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist);

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist)
AND
ObjectExists(_Fist, 0)
THEN
NOT DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist);

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist)
AND
NOT LLMIME_QRY_ItemIsInWeaponSlot(_Mime, _Fist)
THEN
ItemToInventory(_Fist, _Mime, 1, 0, 1);

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
NOT DB_LLMIME_Brawler_SpawnedFist(_Mime, _)
AND
DB_LLMIME_Templates("BrawlerFist", _Template)
AND
GetItemForItemTemplateInInventory(_Mime, _Template, _Fist)
THEN
LLMIME_Brawler_RegisterFist(_Mime, _Fist);
*/
/*
IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
NOT DB_LLMIME_Brawler_SpawnedFist(_Mime, _)
AND
LLMIME_QRY_NoWeaponsEquipped(_Mime)
AND
GetPosition(_Mime, _x, _y, _z)
AND
DB_LLMIME_Templates("BrawlerFist", _Template)
AND
CreateItemTemplateAtPosition(_Template, _x, _y, _z, _Fist)
AND
CharacterGetLevel(_Mime, _Level)
THEN
ItemLevelUpTo(_Fist, _Level);
CharacterEquipItem(_Mime, _Fist);
LLMIME_Brawler_RegisterFist(_Mime, _Fist);
*/

/*
IF
ItemDropped(_Fist)
AND
IsTagged(_Fist, "LLMIME_BrawlerFist", 1)
AND
DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist)
THEN
ItemToInventory(_Fist, _Mime, 0, 1);

IF
ItemDropped(_Fist)
AND
IsTagged(_Fist, "LLMIME_BrawlerFist", 1)
AND
GetTemplate(_Fist, _Template)
AND
DB_LLMIME_Templates("BrawlerFist", _Template)
THEN
ItemDestroy(_Fist);

IF
ItemDestroyed(_Fist)
AND
DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist)
THEN
NOT DB_LLMIME_Brawler_SpawnedFist(_Mime, _Fist);
*/
//END_REGION

//REGION FIST_EQUIPPING
IF
CanUseItem(_Character, _Item, _RequestID)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
AND
HasActiveStatus(_Character, "LLMIME_MIME", 0)
THEN
CharacterStatusText(_Character, "<font color='#FF0000'>You try to use fight like a brawler, but it is futile.</font>");
RequestProcessed(_Character, _RequestID, 0);
DB_LLMIME_Items_Temp_BlockedItem(_Character, _Item);
//END_REGION

//REGION MASK_EQUIPPING
IF
CanUseItem(_Character, _Item, _RequestID)
AND
LLMIME_Mime_QRY_IsMimeItem(_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LLMIME_Templates("Mask_A", _Template)
AND
NOT CharacterGetEquippedItem(_Character, "Helmet", _Item) // Mask not equipped
AND
CharacterIsInCombat(_Character, 1)
THEN
CharacterStatusText(_Character, "<font color='#FF0000'>You can't equip the Mask of Mimicry in combat!</font>");
RequestProcessed(_Character, _RequestID, 0);
DB_LLMIME_Items_Temp_BlockedItem(_Character, _Item);
//END_REGION

//REGION EQUIP_BLOCKING
IF
ItemEquipped(_Item, _Character)
AND
DB_LLMIME_Items_Temp_BlockedItem(_Character, _Item)
THEN
NOT DB_LLMIME_Items_Temp_BlockedItem(_Character, _Item);
CharacterUnequipItem(_Character, _Item);
//END_REGION

//REGION ITEM_LEVELING
IF
ItemEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLMIME_AUTO_LEVEL", 1)
AND
CharacterGetLevel(_Character, _Level)
THEN
ItemLevelUpTo(_Item, _Level);

IF
CharacterLeveledUp(_Character)
AND
CharacterFindTaggedItem(_Character, "LLMIME_AUTO_LEVEL", _Item)
AND
CharacterGetLevel(_Character, _Level)
THEN
ItemLevelUpTo(_Item, _Level);
//END_REGION

//REGION DEBUG
IF
ItemEquipped(_Item, _Character)
AND
GetTemplate(_Item, _Template)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:ItemEquipped] [",_Name,"] equipped item [",_Template,"].");

IF
ItemUnEquipped(_Item, _Character)
AND
GetTemplate(_Item, _Template)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:ItemUnEquipped] [",_Name,"] unequipped item [",_Template,"].");

IF
CanUseItem(_Mime, _Item, _RequestID)
AND
GetTemplate(_Item, _Template)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CanUseItem] [",_Name,"] is attempting to use item [",_Template,"].");

IF
CharacterUsedItem(_Mime, _Item)
AND
GetTemplate(_Item, _Template)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedItem] [",_Name,"] used item [",_Template,"].");

IF
CharacterUsedItemTemplate(_Mime, _Template, _Item)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedItemTemplate] [",_Name,"] used item [",_Template,"].");

IF
ItemDestroying(_Item)
AND
GetTemplate(_Item, _Template)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:ItemDestroying] Item [",_Template,"] is being destroyed.");

IF
ItemDestroyed(_Item)
AND
GetTemplate(_Item, _Template)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:ItemDestroying] Item [",_Template,"] was destroyed.");

IF
CharacterItemEvent(_Mime, _Item, "LLMIME_Events_OnItemUse")
AND
GetTemplate(_Item, _Template)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:LLMIME_Events_OnItemUse] [",_Name,"] used item [",_Template,"].");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
