Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Skills_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Skills_InitSettings()
THEN
SysClear("DB_LLMIME_Skills_DecoyTags", 1);
DB_LLMIME_Skills_DecoyTags("LLMIME_Decoy");
//DB_LLMIME_Skills_DecoyTags("LLMIME_Dummy");
DB_LLMIME_Skills_DecoyTags("AI_PREFERRED_TARGET");
DB_LLMIME_Skills_DecoyTags("IGNORE_UNDEAD_CRIME");
DB_LLMIME_Skills_DecoyTags("IGNORESEENCOMBAT");
DB_LLMIME_Skills_DecoyTags("IGNOREVANDALISE");
//END_REGION

//REGION UPDATING
QRY
LLMIME_Skills_Internal_QRY_VersionNeedsUpdating((STRING)_Version)
AND
_Version == "0.9.0.0"
THEN
DB_NOOP(1);

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", _Version)
AND
LLMIME_Skills_Internal_QRY_VersionNeedsUpdating(_Version)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Skills] Updating settings from version [",_Version,"]");
LLMIME_Skills_InitSettings();
//END_REGION

//REGION QUERIES
QRY
LLMIME_Skills_QRY_SkillMatch((STRING)_Skill, (STRING)_CheckedSkill)
AND
_Skill == _CheckedSkill
THEN
DB_NOOP(1);

//Follower versions
QRY
LLMIME_Skills_QRY_SkillMatch((STRING)_Skill, (STRING)_CheckedSkill)
AND
StringConcatenate(_CheckedSkill, "_Follower", _Skill)
THEN
DB_NOOP(1);
//END_REGION

//REGION WISH
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_Wish", _, _)
AND
CharacterGetHitpointsPercentage(_Caster, _CasterHealth)
AND
_CasterHealth > 2.0
AND
RealDivide(_CasterHealth, 2.0, _NextHealth)
AND
_NextHealth > 1.0
THEN
SetStoryEvent(_Caster, "Mimicry_Events_Wish_UsedSkill");
DB_LLMIME_Beastmaster_Temp_NextWish(_Caster, _Target);

IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_Wish", _, _)
AND
NOT DB_LLMIME_Beastmaster_Temp_NextWish(_Caster, _Target)
THEN
DB_LLMIME_Beastmaster_Temp_FailedWish(_Caster);

IF
SkillCast(_Caster, "Target_LLMIME_Wish", _, _)
AND
DB_LLMIME_Beastmaster_Temp_NextWish(_Caster, _Target)
THEN
NOT DB_LLMIME_Beastmaster_Temp_NextWish(_Caster, _Target);
SetVarFloat(_Caster, "Mimicry_Wish_HealPercentage", 0.50);
CharacterCharacterSetEvent(_Caster, _Target, "Mimicry_Events_OnWishCast");
SetStoryEvent(_Target, "Mimicry_Events_Wish_SkillCast");

IF
SkillCast(_Caster, "Target_LLMIME_Wish", _, _)
AND
DB_LLMIME_Beastmaster_Temp_FailedWish(_Caster)
THEN
NOT DB_LLMIME_Beastmaster_Temp_FailedWish(_Caster);
CharacterStatusText(_Caster, "LLMIME_StatusText_WishFailed");

IF
CharacterCharacterEvent(_Caster, _Target, "Mimicry_Events_WishDelay")
AND
NOT DB_LLMIME_Beastmaster_WishDelayTimer(_Caster, _Target, _)
AND
GetUUID(_Caster, _CasterID)
AND
StringConcatenate("LLMIME_Timers_WishDelayTimer_", _CasterID, _TimerName)
THEN
DB_LLMIME_Beastmaster_WishDelayTimer(_Caster, _Target, _TimerName);
TimerLaunch(_TimerName, 500);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_Beastmaster_WishDelayTimer(_Caster, _Target, _TimerName)
THEN
NOT DB_LLMIME_Beastmaster_WishDelayTimer(_Caster, _Target, _TimerName);
CharacterCharacterSetEvent(_Caster, _Target, "Mimicry_Events_HealWishTarget");

//Fix for CharacterHeal sending vitality over the max
IF
CharacterVitalityChanged(_Target, _Percentage)
AND
ObjectGetFlag(_Target, "Mimicry_Wish_CheckHealthResult", 1)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Target, "Mimicry_Wish_CheckHealthResult")
AND
_Percentage > 100
THEN
CharacterSetHitpointsPercentage(_Target, 100.0);
//END_REGION

//REGION FINAL_WISH
/*Delay actually dying so the animation can play out*/
IF
CharacterUsedSkill(_Character, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Projectile_LLMIME_FinalWish")
THEN
LeaderLib_StartObjectTimer(_Character, 3000, "Mimicry_Timers_FinalWish_DieEvent", "Mimicry_Events_FinalWish_Die");
LeaderLib_StartObjectTimer(_Character, 1000, "Mimicry_Timers_FinalWish_UsedEvent_", "Mimicry_Events_FinalWish_SkillUsed");
LeaderLib_StartObjectTimer(_Character, 2600, "Mimicry_Timers_FinalWish_DeathEffect", "Mimicry_Events_FinalWish_PlayDeathEffect");

IF
SkillCast(_Character, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Projectile_LLMIME_FinalWish")
THEN
LeaderLib_CancelObjectTimerByEvent(_Character, "Mimicry_Events_FinalWish_Die");
LeaderLib_StartObjectTimer(_Character, 1000, "Mimicry_Timers_FinalWish_", "Mimicry_Events_FinalWish_Die");

IF
StoryEvent((CHARACTERGUID)_Character, "Mimicry_Events_FinalWish_Die")
AND
CharacterIsDead(_Character, 0)
THEN
CharacterDie(_Character, 1, "DoT");

IF
CharacterStatusAttempt(_Target, "LLMIME_FINAL_WISH_TARGET", (CHARACTERGUID)_Caster)
AND
NOT DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster)
//LeaderLib_Helper_QRY_HasStatus(_Caster, "LLMIME_SACRIFICED")
THEN
DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster);
LeaderLog_Log("DEBUG", "[Mimicry:Skills:CharacterStatusAttempt(LLMIME_FINAL_WISH_TARGET)] Final Wish target set.");

IF
CharacterResurrected(_Target)
AND
DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster)
THEN
NOT DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster);
CharacterCharacterSetEvent(_Target, _Caster, "Mimicry_Events_RevivedByFinalWish");
LeaderLog_Log("DEBUG", "[Mimicry:Skills:CharacterResurrected] Final Wish target detected.");

IF
CharacterReceivedDamage(_Character, _, _)
AND
HasActiveStatus(_Character, "LLMIME_FINAL_WISH_BUFF", 1)
THEN
SetStoryEvent(_Character, "Mimicry_Events_FinalWish_OnAttacked");
//END_REGION

//REGION DECOY
IF
CharacterUsedSkill(_Character, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Projectile_LLMIME_Decoy")
AND
NOT DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _, _, _)
AND
GetPosition(_Character, _x, _y, _z)
AND
LeaderLog_QRY_RealToIntToString("LLMIME.Debug.DecoyPos", _x, _z)
AND
DB_LeaderLog_Temp_RealString("LLMIME.Debug.DecoyPos", _xstr, _zstr)
THEN
DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _x, _y, _z);
LeaderLog_Log("DEBUG", "[LLMIME:Skills:CharacterUsedSkill(Decoy)] Saving decoy spawn position [",_xstr,",",_zstr,"].");
NOT DB_LeaderLog_Temp_RealString("LLMIME.Debug.DecoyPos", _xstr, _zstr);

IF
CharacterUsedSkill(_Character, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Projectile_LLMIME_Decoy")
AND
GetPosition(_Character, _x, _y, _z)
THEN
DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _x, _y, _z);
LeaderLib_StartObjectTimer(_Character, 450, "LLMIME_Timers_Skills_Internal_Decoy_SmokeEffect_", "Mimicry_Events_Skills_Internal_PlayDecoySmokeEffect");
LeaderLib_StartObjectTimer(_Character, 500, "LLMIME_Timers_Skills_Internal_StartDecoySetup_", "Mimicry_Events_Skills_Internal_StartDecoySetup");
//SetStoryEvent(_Character, "Mimicry_Events_Skills_Internal_StartDecoySetup");


IF
StoryEvent((CHARACTERGUID)_Character, "Mimicry_Events_Skills_Internal_PlayDecoySmokeEffect")
AND
DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _x, _y, _z)
THEN
PlayEffectAtPosition("LLMIME_FX_Skills_Decoy_Cast_Smoke_Root_01", _x, _y, _z);

IF
StoryEvent((CHARACTERGUID)_Character, "Mimicry_Events_Skills_Internal_StartDecoySetup")
AND
DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _x, _y, _z)
THEN
NOT DB_LLMIME_Skills_Temp_DecoyPosition(_Character, _x, _y, _z);
LLMIME_Skills_Internal_CreateDecoyAtPosition(_Character, _x, _y, _z);

PROC
LLMIME_Skills_Internal_CreateDecoyAtPosition((CHARACTERGUID)_Character, (REAL)_x, (REAL)_y, (REAL)_z)
AND
CharacterGetLevel(_Character, _Level)
AND
DB_LLMIME_Templates("Decoy", _DecoyTemplate)
AND
//TemporaryCharacterCreateOutOfSightToObject(_DecoyTemplate, _Character, _Character, 0, "", _Decoy)
TemporaryCharacterCreateAtPosition(_x, _y, _z, _DecoyTemplate, 0, _Decoy)
THEN
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy);
SetVisible(_Decoy, 0);
PlayEffect(_Decoy, "LLMIME_FX_Skills_Decoy_Overlay_FadeIn_01");
PlayEffectAtPosition("RS3_FX_GP_ScriptedEvent_Ambushers_Smoke_01", _x, _y, _z);
ObjectSetFlag(_Decoy, "LLMIME_Decoy");
SetVarObject(_Decoy, "LLMIME_Decoy_Caster", _Character);
SetScriptframe(_Decoy, "LLMIME_Decoy_CopyRotation");
CharacterLevelUpTo(_Decoy, _Level);
CharacterTransformAppearanceTo(_Decoy, _Character, 1, 1);
LeaderLib_StartObjectTimer(_Decoy, 50, "LLMIME_Timers_Skills_Internal_SetupDecoy_", "Mimicry_Events_Skills_Internal_SetupDecoy");
//SetStoryEvent(_Character, "Mimicry_Events_Skills_Internal_SetupDecoyTags");
TeleportToPosition(_Decoy, _x, _y, _z, "Mimicry_Events_Skills_Internal_DecoyTeleported", 0);
LeaderLog_Log("DEBUG", "[LLMIME:Skills:SkillCast(Decoy)] Spawned decoy at saved position.");

/*
IF
StoryEvent((CHARACTERGUID)_Decoy, "Mimicry_Events_Skills_Internal_DecoyTeleported")
THEN
*/

/*
IF
StoryEvent((CHARACTERGUID)_Decoy, "Mimicry_Events_Skills_Internal_DecoyTeleported")
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
AND
GetStatusTurns(_Character, "LLMIME_DECOY_ACTIVE", _Turns)
AND
IntegerProduct(_Turns, 6, _DurationInt)
AND
Real(_DurationInt, _Duration)
THEN
ApplyStatus(_Decoy, "LLMIME_DECOY_LIFETIME", _Duration, 1);
*/

IF
StoryEvent((CHARACTERGUID)_Decoy, "Mimicry_Events_Skills_Internal_SetupDecoy")
THEN
LLMIME_Skills_Internal_ApplyDecoyTags(_Decoy);
SetOnStage(_Decoy, 1);
LLMIME_Skills_SetupDecoy(_Decoy);
SetVisible(_Decoy, 1);

PROC
LLMIME_Skills_Internal_ApplyDecoyTags((CHARACTERGUID)_Decoy)
AND
DB_LLMIME_Skills_DecoyTags(_Tag)
AND
IsTagged(_Decoy, _Tag, 0)
THEN
SetTag(_Decoy, _Tag);
LeaderLog_Log("DEBUG", "[LLMIME:Skills:ApplyDecoyTags] Set tag [",_Tag,"] on decoy.");

PROC
LLMIME_Skills_SetupDecoy((CHARACTERGUID)_Decoy)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
AND
GetFaction(_Character, _Faction)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Skills:SetupDecoy] Setting up decoy.");
SetFaction(_Decoy, _Faction);
CharacterDisableAllCrimes(_Decoy);
CharacterSetCorpseLootable(_Decoy, 0);
//CharacterAddTalent(_Decoy, "Unstable");
CharacterAddTalent(_Decoy, "Raistlin"); // AI exploit ;)

/*
PROC
LLMIME_Skills_SetupDecoy((CHARACTERGUID)_Decoy)
AND
CharacterFindTaggedItem(_Decoy, "LLMIME_MimeMask", _Mask)
AND
GetTemplate(_Mask, _MaskTemplate)
AND
DB_LLMIME_Templates("Mask_A", _MaskTemplate)
AND
DB_LLMIME_Templates("Mask_A_Preview", _PreviewTemplate)
THEN
Transform(_Mask, _PreviewTemplate, 1, 1, 1);
*/

IF
ObjectTurnEnded((CHARACTERGUID)_Character)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
CharacterCharacterSetEvent(_Character, _Decoy, "Mimicry_Events_Decoy_TauntNearbyEnemies");

IF
CharacterStatusRemoved(_Character, "LLMIME_DECOY_ACTIVE", _)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Character, "LLMIME_DECOY_ACTIVE")
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
LLMIME_Skills_Internal_OnDecoyRemoved(_Decoy);
//CharacterDieImmediate(_Decoy, 0, "None");

IF
CharacterStatusRemoved(_Decoy, "LLMIME_DECOY_LIFETIME", _)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Decoy, "LLMIME_DECOY_LIFETIME")
THEN
LLMIME_Skills_Internal_OnDecoyRemoved(_Decoy);

IF
CharacterDying(_Decoy)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
LLMIME_Skills_Internal_OnDecoyRemoved(_Decoy);

PROC
LLMIME_Skills_Internal_OnDecoyRemoved((CHARACTERGUID)_Decoy)
AND
ObjectIsOnStage(_Decoy, 1)
AND
GetPosition(_Decoy, _x, _y, _z)
THEN
//PlayEffectAtPosition("RS3_FX_GP_Combat_CorpseExplosion_Wood_01_Small", _x, _y, _z);
//PlayEffectAtPosition("RS3_FX_Poof_Wood_01", _x, _y, _z);
PlayEffectAtPosition("RS3_FX_GP_ScriptedEvent_Ambushers_Smoke_01", _x, _y, _z);
SetOnStage(_Decoy, 0);

PROC
LLMIME_Skills_Internal_OnDecoyRemoved((CHARACTERGUID)_Decoy)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
NOT DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy);
LLMIME_Skills_Internal_RemoveDecoyStatus(_Character);

PROC
LLMIME_Skills_Internal_RemoveDecoyStatus((CHARACTERGUID)_Character)
AND
NOT DB_LLMIME_Skills_Temp_Decoy(_Character, _)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Character, "LLMIME_Timers_Skills_RemoveDecoyActiveStatus_")
THEN
LeaderLib_StartObjectTimer(_Character, 250, "LLMIME_Timers_Skills_RemoveDecoyActiveStatus_", "Mimicry_Events_Skills_Internal_RemoveDecoyActiveStatus");

IF
StoryEvent((CHARACTERGUID)_Character, "Mimicry_Events_Skills_Internal_RemoveDecoyActiveStatus")
AND
NOT DB_LLMIME_Skills_Temp_Decoy(_Character, _)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLMIME_DECOY_ACTIVE")
THEN
SetStoryEvent(_Character, "Mimicry_Events_Decoy_RemoveInvisibility");

IF
AttackedByObject((CHARACTERGUID)_Character, _, _Attacker, _, _)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLMIME_DECOY_ACTIVE")
THEN
SetStoryEvent(_Character, "Mimicry_Events_Decoy_RemoveInvisibility");

IF
CharacterStatusApplied(_Character, _Status, _)
AND
_Status != "LLMIME_DECOY_ACTIVE"
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLMIME_DECOY_ACTIVE")
AND
LeaderLib_Helper_QRY_IsStunningStatus(_Status)
THEN
SetStoryEvent(_Character, "Mimicry_Events_Decoy_RemoveInvisibility");
//END_REGION

//REGION QUAKE_SLAM
PROC
LLMIME_Skills_SpawnSkillPlatform((GUIDSTRING)_Object)
AND
NOT DB_LLMIME_Temp_SkillPlatforms(_Object, _)
AND
GetUUID(_Object, _UUID)
AND
GetPosition(_Object, _x, _y, _z)
AND
LeaderLIb_Platforms_QRY_SpawnPlatform(_UUID, "Large", 0, _x, _y, _z)
AND
DB_LeaderLib_Platforms(_UUID, _Platform)
AND
LeaderLib_Random_QRY(700,1100)
AND
DB_LeaderLib_Random(_TimerDelay)
THEN
NOT DB_LeaderLib_Random(_TimerDelay);
DB_LLMIME_Temp_SkillPlatforms(_Object, _Platform);
DB_LLMIME_Skills_Temp_FallSpeed(_Object, _Platform, _TimerDelay);
LeaderLib_StartObjectTimer(_Platform, _TimerDelay, "Mimicry_Timers_RemovePlatformTimer_", "Mimicry_Events_Skills_RemovePlatform");
PlayScaledEffectAtPosition("LLMIME_FX_Status_Launched_Apply_Root_01", 0.25, _x, _y, _z);

IF
ItemStatusAttempt(_Object, "LLMIME_LAUNCHED", (CHARACTERGUID)_Caster)
THEN
SetStoryEvent(_Object, "Mimicry_Skills_KnockUpObject");

IF
CharacterStatusApplied(_Object, "LLMIME_LAUNCHED", (CHARACTERGUID)_Caster)
THEN
SetStoryEvent(_Object, "Mimicry_Skills_KnockUpObject");

IF
StoryEvent(_Object, "Mimicry_Skills_KnockUpObject")
AND
GetPosition(_Object, _x, _y, _z)
THEN
LLMIME_Skills_SpawnSkillPlatform(_Object);
PlayEffectAtPosition("RS3_FX_SubEffects_Ground_Earthquake_01", _x, _y, _z);

IF
CharacterUsedSkill(_Caster, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Shout_LLMIME_QuakeSlam")
AND
GetPosition(_Caster, _x, _y, _z)
THEN
PlayEffectAtPosition("LLMIME_FX_Skills_QuakeSlam_Cast_Root_01", _x, _y, _z);

IF
StoryEvent((ITEMGUID)_Platform, "Mimicry_Events_Skills_RemovePlatform")
AND
DB_LLMIME_Temp_SkillPlatforms(_Object, _Platform)
AND
DB_LLMIME_Skills_Temp_FallSpeed(_Object, _Platform, _TimerDelay)
AND
Real(_TimerDelay, _TimerDelayR)
AND
RealProduct(_TimerDelayR, 1.05, _DamageDelayR)
AND
Integer(_DamageDelayR, _DamageDelay)
THEN
NOT DB_LLMIME_Temp_SkillPlatforms(_Object, _Platform);
NOT DB_LLMIME_Skills_Temp_FallSpeed(_Object, _Platform, _TimerDelay);
LeaderLib_Platforms_RemovePlatform(_Platform);
LeaderLib_StartObjectTimer(_Object, _DamageDelay, "Mimicry_Timers_Skills_ApplyFallDamage_", "Mimicry_Events_Skills_ApplyFallDamage");

IF
StoryEvent(_Object, "Mimicry_Events_Skills_ApplyFallDamage")
AND
HasActiveStatus(_Object, "LLMIME_LAUNCHED", 1)
THEN
RemoveStatus(_Object, "LLMIME_LAUNCHED");

/*
IF
ItemStatusAttempt(_Object, "LLMIME_LAUNCHED", (CHARACTERGUID)_Caster)
AND
GetUUID(_Object, _ID)
AND
GetPosition(_Caster, _x, _y, _z)
AND
LLMIME_Dummy_QRY_CreateCharacterDummy(_ID, _x, _y, _z)
AND
DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy)
THEN
SetStoryEvent(_Object, "Mimicry_Skills_KnockUpObject");
LeaderLib_StartCharacterItemTimer(_Dummy, _Object, 50, "Mimicry_Timers_Skills_LaunchItem_", "Mimicry_Events_Skills_LaunchObject");

IF
CharacterStatusApplied(_Object, "LLMIME_LAUNCHED", (CHARACTERGUID)_Caster)
AND
GetUUID(_Object, _ID)
AND
GetPosition(_Caster, _x, _y, _z)
AND
LLMIME_Dummy_QRY_CreateCharacterDummy(_ID, _x, _y, _z)
AND
DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy)
THEN
SetStoryEvent(_Object, "Mimicry_Skills_KnockUpObject");
LeaderLib_StartCharacterCharacterTimer(_Dummy, _Object, 50, "Mimicry_Timers_Skills_LaunchCharacter_", "Mimicry_Events_Skills_LaunchObject");

IF
CharacterCharacterEvent(_Dummy, _Object, "Mimicry_Events_Skills_LaunchObject")
THEN
CharacterUseSkill(_Dummy, "Cone_LLMIME_S_Push", _Object, 1, 1, 1);
LLMIME_Dummy_ResetDummyAfterDelay(_Dummy, 999);

IF
CharacterItemEvent(_Dummy, _Object, "Mimicry_Events_Skills_LaunchObject")
THEN
CharacterUseSkill(_Dummy, "Cone_LLMIME_S_Push", _Object, 1, 1, 1);
LLMIME_Dummy_ResetDummyAfterDelay(_Dummy, 999);
*/

/*
IF
CharacterStatusRemoved(_Object, "LLMIME_LAUNCHED", _)
AND
DB_LLMIME_Temp_SkillPlatforms(_Object, _Platform)
THEN
//LeaderLib_StartObjectTimer(_Platform, 500, "Mimicry_Timers_RemovePlatformTimer_", "Mimicry_Events_Skills_RemovePlatform");
NOT DB_LLMIME_Temp_SkillPlatforms(_Object, _Platform);
ItemRemove(_Platform);
*/
//END_REGION

//REGION VITAL_INFLUENCE
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, _Skill, _, _)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, "Target_LLMIME_VitalInfluence")
AND
LeaderLib_Helper_QRY_AttributeIsGreater(_Caster, _Target, "Constitution")
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Skills:CharacterUsedSkillOnTarget] Prepared beam effects for [",_Skill,"].");
DB_LLMIME_Skills_Temp_BeamEffect(_Target, _Caster, _Skill, "LLMIME_FX_Skills_VitalInfluence_Beam_01", "Dummy_BodyFX", "Dummy_BodyFX");

IF
CharacterStatusAttempt(_Target, "LLMIME_VITAL_CHECK", (CHARACTERGUID)_Caster)
AND
LeaderLib_Helper_QRY_AttributeIsGreater(_Caster, _Target, "Constitution")
THEN
ApplyStatus(_Caster, "LLMIME_VITAL_BUFF", 12.0, 0, _Caster);
ApplyStatus(_Target, "LLMIME_VITAL_DEBUFF", 12.0, 0, _Caster);
RemoveStatus(_Target, "LLMIME_VITAL_CHECK");

IF
CharacterStatusAttempt(_Target, "LLMIME_VITAL_CHECK", (CHARACTERGUID)_Caster)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Target, "LLMIME_VITAL_DEBUFF")
THEN
CharacterStatusText(_Caster, "LLMIME_StatusText_VitalityCheck_Failed");
//END_REGION

//REGION BEAM_EFFECTS
IF
SkillCast(_Caster, _Skill, _, _)
AND
DB_LLMIME_Skills_Temp_BeamEffect(_Caster, _Target, _Skill, _Effect, _CasterBone, _TargetBone)
THEN
NOT DB_LLMIME_Skills_Temp_BeamEffect(_Caster, _Target, _Skill, _Effect, _CasterBone, _TargetBone);
PlayBeamEffect(_Caster, _Target, _Effect, _CasterBone, _TargetBone);
LeaderLog_Log("DEBUG", "[Mimicry:Skills:SkillCast] Played beam effect [",_Effect,"].");

IF
SkillCast(_Caster, _Skill, _, _)
AND
DB_LLMIME_Skills_Temp_BeamEffect(_Target, _Caster, _Skill, _Effect, _CasterBone, _TargetBone)
THEN
NOT DB_LLMIME_Skills_Temp_BeamEffect(_Target, _Caster, _Skill, _Effect, _CasterBone, _TargetBone);
PlayBeamEffect(_Target, _Caster, _Effect, _CasterBone, _TargetBone);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
