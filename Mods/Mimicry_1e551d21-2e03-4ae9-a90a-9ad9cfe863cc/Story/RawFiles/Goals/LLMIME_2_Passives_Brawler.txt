Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Brawler_InitSettings();
/*Settings*/
//DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
//DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
/*Temp*/
//DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
//DB_LLMIME_Brawler_JustToggledStance(_Mime)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Brawler_InitSettings()
THEN
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", "Mimicry_BrawlerStance_UseCon", "LLMIME_BRAWLER_STANCE_CON_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Con_1f4bd5ba-4cf3-4262-af49-455e2530c986");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_STR", "Mimicry_BrawlerStance_UseStr", "LLMIME_BRAWLER_STANCE_STR_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Str_694fa103-1089-492b-a7db-aef0e5cf0efd");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_FIN", "Mimicry_BrawlerStance_UseFin", "LLMIME_BRAWLER_STANCE_FIN_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Fin_c2f6f50c-8e29-4fdc-8391-f8a4e823f658");

DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseCon", "*Prefer a body-based Brawler Stance (Scales with Constitution).* (Default)");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseStr", "*Prefer a strength-based Brawler Stance (Scales with Strength).*");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseFin", "*Prefer a finesse-based Brawler Stance (Scales with Finesse).*");
//END_REGION

//REGION SETTINGS_DIALOG_VARS
IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
THEN
LLMIME_Settings_SetDialogVariables(_Mime, _Instance);

IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Settings_SetDialogVariables((CHARACTERGUID)_Mime, (INTEGER)_Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
ObjectGetFlag(_Mime, _SettingsFlag, _FlagVal)
THEN
LLMIME_Brawler_Internal_SetStanceString(_Instance, _DialogVar, _Str, _FlagVal);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 0
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _Str);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 1
AND
StringConcatenate(_Str, " *Active*", _FinalStr)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _FinalStr);
//END_REGION

//REGION DEBUG
IF
AttackedByObject(_Target, _Owner, (CHARACTERGUID)_Mime, _DamageType, _DamageSource)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:AttackedByObject] Mime attacked something. DamageType[",_DamageType,"] DamageSource[",_DamageSource,"].");

IF
CharacterReceivedDamage(_Target, _Percentage, (CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
IntegertoString(_Percentage, _DamageStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:CharacterReceivedDamage] Mime did [",_DamageStr,"]% damage. Whatever that means.");
//END_REGION

//REGION SUCKER_PUNCH
IF
SkillAdded(_Mime, "Target_SingleHandedAttack", _)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
LeaderLib_StartObjectTimer(_Mime, 200, "Mimicry_Timers_Brawler_SwapSuckerPunch_", "Mimicry_Events_SwapSuckerPunch");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_Events_SwapSuckerPunch")
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
CharacterHasSkill(_Mime, "Target_SingleHandedAttack", 1)
THEN
CharacterRemoveSkill(_Mime, "Target_SingleHandedAttack");
CharacterAddSkill(_Mime, "Target_LLMIME_SuckerPunch");
LeaderLog_Log("DEBUG", "[LLMIME:Brawler:Mimicry_Events_SwapSuckerPunch] Removing [Target_SingleHandedAttack] and adding [Target_LLMIME_SuckerPunch] to Mime.");

IF
ItemUnEquipped(_Item, _Mime)
AND
LLMIME_QRY_WeaponIsBrawlerFist(_Item)
THEN
LLMIME_Brawler_RemoveSuckerPunch(_Mime);

IF
ObjectFlagCleared("Mimicry_MimeIsUnarmed", (CHARACTERGUID)_Mime, _)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
LLMIME_Brawler_RemoveSuckerPunch(_Mime);

IF
CharacterStatusRemoved(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
LLMIME_Brawler_RemoveSuckerPunch(_Mime);

PROC
LLMIME_Brawler_RemoveSuckerPunch((CHARACTERGUID)_Mime)
AND
CharacterHasSkill(_Mime, "Target_LLMIME_SuckerPunch", 1)
THEN
CharacterRemoveSkill(_Mime, "Target_LLMIME_SuckerPunch");
LeaderLog_Log("DEBUG", "[LLMIME:Brawler:Mimicry_MimeIsUnarmed(Cleared)] Removing [Target_LLMIME_SuckerPunch] from Mime.");
//END_REGION

//REGION BRAWLER_STANCE_PREFERENCE_SET
PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectClearFlag(_Mime, _SettingsFlag);

PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
THEN
ObjectSetFlag(_Mime, _Flag);
LLMIME_Brawler_RemoveStance(_Mime);
LLMIME_Brawler_ApplyStance(_Mime);

QRY
LLMIME_Brawler_QRY_StancePreferenceSet((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
THEN
DB_NOOP(1);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER", _)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default
//END_REGION

//REGION BRAWLER_STANCE_TOGGLE
IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "LLMIME_Events_BrawlerStanceActivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "LLMIME_Events_BrawlerStanceDeactivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "LLMIME_Events_BrawlerStanceActivated_Cast");
LLMIME_Brawler_ApplyStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "LLMIME_Events_BrawlerStanceDeactivated_Cast");
LLMIME_Brawler_RemoveStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _)
AND
DB_LLMIME_Brawler_JustToggledStance(_Mime)
THEN
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ApplyBrawlerStance")
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Brawler_ApplyStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
AND
HasActiveStatus(_Mime, _Status, 0)
THEN
ApplyStatus(_Mime, _Status, -1.0, 1);
ObjectSetFlag(_Mime, "Mimicry_BrawlerStatusActive");

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION BRAWLER_STANCE_REMOVAL
IF
ItemUnEquipped(_Item, _Mime)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
THEN
LLMIME_Brawler_RemoveStance(_Mime);

IF
CharacterStatusRemoved(_Mime, "LLMIME_BRAWLER", _)
THEN
LLMIME_Brawler_RemoveStance(_Mime);

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
RemoveStatus(_Mime, _Status);
SetStoryEvent(_Mime, "LLMIME_Events_BrawlerStanceDeactivated_Status");

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
CharacterIsDead(_Mime, 0)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStatusActive");
//END_REGION

//REGION BONUS_DAMAGE
IF
AttackedByObject(_Target, _Owner, (CHARACTERGUID)_Mime, _DamageType, "Attack")
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
LLMIME_Brawler_QRY_BrawlerActive(_Mime)
AND
LLMIME_Brawler_QRY_DamageTypeMatches(_Mime, _DamageType)
AND
NOT DB_LLMIME_Brawler_BonusAttackTimer(_, _Mime, _Target)
AND
GetUUID(_Mime, _MimeID)
AND
StringConcatenate("LLMIME_Timers_BrawlerBonusAttack_", _MimeID, _TimerName)
THEN
//LLMIME_Brawler_ApplyBonusDamage(_Mime, _Target);
LLMIME_Brawler_IncrementHits(_Mime, _Target);
DB_LLMIME_Brawler_BonusAttackTimer(_TimerName, _Mime, _Target);
TimerLaunch(_TimerName, 250); // Prevents multiple bonus damage calls in a single attack

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_Brawler_BonusAttackTimer(_TimerName, _Mime, _Target)
THEN
NOT DB_LLMIME_Brawler_BonusAttackTimer(_TimerName, _Mime, _Target);

PROC
LLMIME_Brawler_ApplyBonusDamage((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
CharacterGetLevel(_Mime, _Level)
AND
IntegerProduct(_Level, 5, _Damage)
THEN
ApplyDamage(_Target, _Damage, "Physical", _Mime);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
AND
IntegerSum(_TotalHits, 1, _NextTotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _NextTotalHits);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _)
THEN
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, 1);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, 3)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, 3);
ApplyStatus(_Target, "LLMIME_UNARMED_BONUS_DAMAGE", 0.0, 1, _Mime);
//END_REGION

//REGION DOUBLE_ATTACK
IF
CharacterStartAttackObject(_, _, _Mime)
AND
CharacterIsInCombat(_Mime, 1)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
NOT DB_LLMIME_Brawler_Temp_MimeIsAttacking(_Mime)
AND
ObjectGetFlag(_Mime, "LLMIME_CANNOT_DOUBLE_ATTACK", 0)
THEN
DB_LLMIME_Brawler_Temp_MimeIsAttacking(_Mime);

IF
CharacterCriticalHitBy(_Target, _Owner, _Mime)
AND
CharacterIsDead(_Target, 0)
AND
CharacterIsInCombat(_Mime, 1)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
DB_LLMIME_Brawler_Temp_MimeIsAttacking(_Mime)
AND
LLMIME_Brawler_QRY_BrawlerActive(_Mime)
AND
ObjectGetFlag(_Mime, "LLMIME_CANNOT_DOUBLE_ATTACK", 0)
THEN
ObjectSetFlag(_Mime, "LLMIME_CANNOT_DOUBLE_ATTACK");
LLMIME_Brawler_DoubleAttack(_Mime, _Target);

PROC
LLMIME_Brawler_DoubleAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_, _Mime, _)
AND
GetUUID(_Mime, _ID)
AND
StringConcatenate("LLMIME_Timers_BrawlerDoubleAttack_", _ID, _TimerName)
AND
PlayLoopEffect(_Mime, "LLMIME_FX_DoubleAttack_Overlay_01", "", _FXHandle)
THEN
CharacterAddActionPoints(_Mime, 2);
//PlayAnimation(_Mime, "attack1");
CharacterStatusText(_Mime, "LLMIME_StatusText_DoubleStrike");
CharacterAttack(_Mime, _Target);
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle);
TimerLaunch(_TimerName, 3000);

IF
AttackedByObject(_Target, _, (CHARACTERGUID)_Mime, _, _)
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, 2000);
StopLoopEffect(_FXHandle);
NOT DB_LLMIME_Brawler_Temp_MimeIsAttacking(_Mime);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
THEN
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle);
ObjectClearFlag(_Mime, "LLMIME_CANNOT_DOUBLE_ATTACK");
//END_REGION

//REGION WEAPON_MIMICKING_STANCE_SAVING
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_WeaponMimickingStarted")
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
ObjectSetFlag(_Mime, "Mimicry_BrawlerStanceWasActive");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimickedWeaponsRemoved")
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStanceWasActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStanceWasActive");
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION INFOSTATUSES
IF
CharacterStatusRemoved(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 0)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
CharacterStatusApplied(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
NOT ObjectGetFlag(_Mime, _DisableInfoFlag, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1);

IF
ObjectFlagSet(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
ObjectFlagCleared(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1);
//END_REGION

//REGION QUERIES
QRY
LLMIME_Brawler_QRY_StanceIsActive((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_DamageTypeMatches((CHARACTERGUID)_Mime, (STRING)_DamageType)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_BrawlerActive((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_BRAWLER_BONUS", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION RESET
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ResetMimeCombatData")
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
THEN
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle);
TimerCancel(_TimerName);
StopLoopEffect(_FXHandle);
ObjectClearFlag(_Mime, "LLMIME_CANNOT_DOUBLE_ATTACK");
NOT DB_LLMIME_Brawler_Temp_MimeIsAttacking(_Mime);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
