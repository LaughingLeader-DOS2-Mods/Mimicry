Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Brawler_InitSettings();
/*Settings*/
//DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
//DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
//DB_LLMIME_Brawler_FistDeltaMods(_MinLevel, _DeltaMod)
/*Temp*/
//DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
//DB_LLMIME_Brawler_JustToggledStance(_Mime)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Brawler_InitSettings()
THEN
SysClear("DB_LLMIME_Brawler_StanceStatuses", 5);
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", "Mimicry_BrawlerStance_UseCon", "LLMIME_BRAWLER_STANCE_CON_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Con_1f4bd5ba-4cf3-4262-af49-455e2530c986");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_STR", "Mimicry_BrawlerStance_UseStr", "LLMIME_BRAWLER_STANCE_STR_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Str_694fa103-1089-492b-a7db-aef0e5cf0efd");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_FIN", "Mimicry_BrawlerStance_UseFin", "LLMIME_BRAWLER_STANCE_FIN_INFO", "Mimicry_HideMimePassives", "LLMIME_Settings_BrawlerStance_Fin_c2f6f50c-8e29-4fdc-8391-f8a4e823f658");

SysClear("DB_LLMIME_Brawler_StanceStatuses", 3);
//These need to be hard-coded strings rather than translates strings, since the engine doesn't seem to translate a string passed from a variable
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseCon", "*Prefer a body-based Brawler Stance (Scales with Constitution).* (Default)");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseStr", "*Prefer a strength-based Brawler Stance (Scales with Strength).*");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseFin", "*Prefer a finesse-based Brawler Stance (Scales with Finesse).*");

SysClear("DB_LLMIME_Brawler_UnarmedSkills", 1);
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_EyeGouge");
DB_LLMIME_Brawler_UnarmedMimeSkills("Shout_LLMIME_QuakeSlam");
DB_LLMIME_Brawler_UnarmedMimeSkills("MultiStrike_LLMIME_MimeVault");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_KneeBreaker");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_DisarmingBlow");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_Fatality");
//Vanilla skills
SysClear("DB_LLMIME_Brawler_UnarmedDOS2Skills", 1);
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_LLMIME_DoubleStrike"); // Technically a mime skill, but it has no follower version.
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_CripplingBlow");
//DB_LLMIME_Brawler_UnarmedSkills("Cone_GroundSmash");
DB_LLMIME_Brawler_UnarmedDOS2Skills("MultiStrike_BlinkStrike");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Shout_Whirlwind");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_Overpower");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_Flurry");
//END_REGION

//REGION UPDATING
//Disabled for now
QRY
LLMIME_Brawler_Internal_QRY_VersionNeedsUpdating((STRING)_Version)
AND
_Version == "1.0.0.0"
THEN
DB_NOOP(1);

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", _Version)
AND
LLMIME_Brawler_Internal_QRY_VersionNeedsUpdating(_Version)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Brawler] Updating settings from version [",_Version,"]");
LLMIME_Brawler_InitSettings();
//END_REGION

//REGION SETTINGS_DIALOG_VARS
IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
THEN
LLMIME_Settings_SetDialogVariables(_Mime, _Instance);

IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Settings_SetDialogVariables((CHARACTERGUID)_Mime, (INTEGER)_Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
ObjectGetFlag(_Mime, _SettingsFlag, _FlagVal)
THEN
LLMIME_Brawler_Internal_SetStanceString(_Instance, _DialogVar, _Str, _FlagVal);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 0
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _Str);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 1
AND
StringConcatenate(_Str, " *Active*", _FinalStr)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _FinalStr);
//END_REGION

//REGION CLEAR_DATA
QRY
LLMIME_Brawler_QRY_TargetDataExists((GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
THEN
DB_LLMIME_Brawler_Temp_MatchedMime(_Target, _Mime);

PROC
LLMIME_Brawler_ClearMimeData((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);

PROC
LLMIME_Brawler_ClearMimeData((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
THEN
NOT DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill);

PROC
LLMIME_Brawler_ClearMimeData((CHARACTERGUID)_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_ApplyingUnarmedDamage", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_ApplyingUnarmedDamage");
//END_REGION

//REGION DEBUG
IF
AttackedByObject(_Target, _Owner, (CHARACTERGUID)_Mime, _DamageType, _DamageSource)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:AttackedByObject] Mime attacked something. DamageType[",_DamageType,"] DamageSource[",_DamageSource,"].");

IF
CharacterReceivedDamage(_Target, _Percentage, (CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
IntegertoString(_Percentage, _DamageStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:CharacterReceivedDamage] Mime did [",_DamageStr,"]% damage. Whatever that means.");
//END_REGION

//REGION BRAWLER_STANCE_PREFERENCE_SET
PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectClearFlag(_Mime, _SettingsFlag);

PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
THEN
ObjectSetFlag(_Mime, _Flag);
LLMIME_Brawler_RemoveStance(_Mime);
LLMIME_Brawler_ApplyStance(_Mime);

QRY
LLMIME_Brawler_QRY_StancePreferenceSet((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
THEN
DB_NOOP(1);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER", _)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default
//END_REGION

//REGION BRAWLER_STANCE_TOGGLE
IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceActivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceActivated_Cast");
LLMIME_Brawler_ApplyStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Cast");
LLMIME_Brawler_RemoveStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
DB_LLMIME_Brawler_JustToggledStance(_Mime)
THEN
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime);

//Should fire after being Resurrected, or putting the mask back on.
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeInitialized")
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
LLMIME_Brawler_ApplyStance(_Mime);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ApplyBrawlerStance")
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Brawler_ApplyStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
AND
HasActiveStatus(_Mime, _Status, 0)
THEN
ApplyStatus(_Mime, _Status, -1.0, 1);
ObjectSetFlag(_Mime, "Mimicry_BrawlerStatusActive");

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION BRAWLER_STANCE_REMOVAL
IF
ItemUnEquipped(_Item, _Mime)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
THEN
ItemRemove(_Item);
LLMIME_Brawler_RemoveStance(_Mime);

IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
THEN
ItemRemove(_Item);

IF
CharacterStatusRemoved(_Mime, "LLMIME_BRAWLER", _)
THEN
LLMIME_Brawler_RemoveStance(_Mime);

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
RemoveStatus(_Mime, _Status);
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Status");

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
CharacterIsDead(_Mime, 0)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStatusActive");
//END_REGION

//REGION BASIC_ATTACK_FLAGGING
IF
CharacterStartAttackObject(_Target, _, _Mime)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
LeaderLib_CancelObjectTimer(_Mime, "Mimicry_Timers_ResetBasicAttackFlag");
ObjectSetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack");

/*
IF
CharacterMissedBy(_Target, _, _Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack");
*/

IF
CharacterUsedSkill(_Mime, "Target_LLMIME_ApplyUnarmedBonusDamage", _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack");

IF
CharacterUsedSkill(_Mime, "Target_LLMIME_MimicAttack", _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack");

IF
AttackedByObject(_Target, _, (CHARACTERGUID)_Mime, _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
AND
ObjectIsItem((ITEMGUID)_Target, 1)
AND
ItemIsDestructible(_Target, 1)
THEN
CharacterItemSetEvent(_Mime, _Target, "Mimicry_Events_OnMimeUnarmedBasicAttack");

IF
AttackedByObject(_Target, _, (CHARACTERGUID)_Mime, _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
THEN
CharacterCharacterSetEvent(_Mime, _Target, "Mimicry_Events_OnMimeUnarmedBasicAttack");

IF
AttackedByObject(_Target, _, _Mime, _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
THEN
LeaderLib_StartObjectTimer(_Mime, 1500, "Mimicry_Timers_ResetBasicAttackFlag", "Mimicry_Events_ResetBasicAttackFlag");

IF
StoryEvent(_Mime, "Mimicry_Events_ResetBasicAttackFlag")
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_MimeIsStartingBasicAttack");
//END_REGION

//REGION UNARMED_BONUS_DAMAGE
IF
CharacterCharacterEvent(_Mime, _Target, "Mimicry_Events_OnMimeUnarmedBasicAttack")
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Brawler:OnMimeUnarmedBasicAttack] Mime hit character target with basic unarmed attack.");
LLMIME_Brawler_OnUnarmedAttack(_Mime, _Target);

IF
CharacterItemEvent(_Mime, _Target, "Mimicry_Events_OnMimeUnarmedBasicAttack")
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Brawler:OnMimeUnarmedBasicAttack] Mime hit item target with basic unarmed attack.");
LLMIME_Brawler_OnUnarmedAttack(_Mime, _Target);

//Workaround for skills that don't fire CharacterUsedSkillOnTarget
IF
CharacterUsedSkill(_Mime, _Skill, _, _)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 0)
AND
NOT DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
AND
DB_LLMIME_Brawler_UnarmedDOS2Skills(_Skill)
THEN
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill);

IF
CharacterUsedSkill(_Mime, _Skill, _, _)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 0)
AND
NOT DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
AND
DB_LLMIME_Brawler_UnarmedMimeSkills(_UnarmedSkill)
AND
NOT DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
AND
LLMIME_Skills_QRY_SkillMatch(_Skill, _UnarmedSkill)
THEN
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill);

IF
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
THEN
ProcObjectTimer(_Mime, "Mimicry_ResetUsedUnarmedSkill", 1500);

IF
CharacterStatusAttempt(_Target, "HIT", (CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
THEN
LLMIME_Brawler_OnUnarmedAttack(_Mime, _Target);

IF
SkillCast(_Mime, _Skill, _, _)
AND
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
THEN
ProcObjectTimerCancel(_Mime, "Mimicry_ResetUsedUnarmedSkill");
ProcObjectTimer(_Mime, "Mimicry_ResetUsedUnarmedSkill", 1000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Mime, "Mimicry_ResetUsedUnarmedSkill")
AND
DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill)
THEN
NOT DB_LLMIME_Brawler_UsedUnarmedSkill(_Mime, _Skill);

PROC
LLMIME_Brawler_OnUnarmedAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
LLMIME_Brawler_QRY_BrawlerActive(_Mime)
AND
DB_LLMIME_Brawler_BlockBonusAttack(_Mime, _Target)
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Brawler:OnUnarmedAttack] Ignoring unarmed attack, as the hit was already registered.");

PROC
LLMIME_Brawler_OnUnarmedAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
LLMIME_Brawler_QRY_BrawlerActive(_Mime)
AND
NOT DB_LLMIME_Brawler_BlockBonusAttack(_Mime, _Target)
THEN
LeaderLog_Log("TRACE", "[Mimicry:Brawler:OnUnarmedAttack] Incrementing basic attack combo.");
LLMIME_Brawler_IncrementHits(_Mime, _Target);
DB_LLMIME_Brawler_BlockBonusAttack(_Mime, _Target);
ProcObjectTimer(_Mime, "LLMIME_Timers_ClearBonusAttackBlock", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Mime, "LLMIME_Timers_ClearBonusAttackBlock")
AND
DB_LLMIME_Brawler_BlockBonusAttack(_Mime, _Target)
THEN
NOT DB_LLMIME_Brawler_BlockBonusAttack(_Mime, _Target);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _)
THEN
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, 0);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
AND
IntegerSum(_TotalHits, 1, _NextTotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _NextTotalHits);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
AND
_TotalHits >= 3
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
LeaderLog_Log("TRACE", "[Mimicry:Brawler:IncrementHits] Casting unarmed damage skill in 1 second.");
LeaderLib_StartObjectObjectTimer(_Mime, _Target, 1000, "LLMIME_Timers_Brawler_CastUnarmedBonusDamage_", "Mimicry_Events_CastUnarmedBonusDamage");

PROC
LeaderLib_ObjectObjectTimerFinished((CHARACTERGUID)_Mime, _Target, "Mimicry_Events_CastUnarmedBonusDamage")
AND
CharacterIsDead(_Mime, 0)
AND
LLMIME_Brawler_QRY_ObjectIsAlive(_Target)
THEN
ObjectSetFlag(_Mime, "Mimicry_ApplyingUnarmedDamage");
SetVarObject(_Target, "LLMIME_UnarmedBonusDamageSource", _Mime);
CharacterUseSkill(_Mime, "Target_LLMIME_ApplyUnarmedBonusDamage", _Target, 1, 1, 1);

QRY
LLMIME_Brawler_QRY_ObjectIsAlive((GUIDSTRING)_Target)
AND
ObjectIsCharacter(_Target, 1)
AND
CharacterIsDead((CHARACTERGUID)_Target, 0)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_ObjectIsAlive((GUIDSTRING)_Target)
AND
ObjectIsItem(_Target, 1)
AND
ItemIsDestroyed((ITEMGUID)_Target, 0)
THEN
DB_NOOP(1);

IF
CharacterDied(_Mime)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
THEN
LLMIME_Brawler_ClearMimeData(_Mime);

IF
CharacterDied(_Target)
AND
LLMIME_Brawler_QRY_TargetDataExists((GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_Temp_MatchedMime(_Target, _Mime)
THEN
NOT DB_LLMIME_Brawler_Temp_MatchedMime(_Target, _Mime);
LLMIME_Brawler_ClearMimeData(_Mime);

IF
ItemDestroyed(_Target)
AND
LLMIME_Brawler_QRY_TargetDataExists((GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_Temp_MatchedMime(_Target, _Mime)
THEN
NOT DB_LLMIME_Brawler_Temp_MatchedMime(_Target, _Mime);
LLMIME_Brawler_ClearMimeData(_Mime);
//END_REGION

//REGION UNARMED_BONUS_DAMAGE_DEBUFFS
IF
CharacterStatusApplied(_Target, "LLMIME_UNARMED_BONUS_DAMAGE", (CHARACTERGUID)_Mime)
AND
Random(99999, _Seed)
THEN
SetStoryEvent(_Target, "Mimicry_Events_HitByUnarmedBonusDamage");
LLMIME_Brawler_ApplyBonusDamageDebuffs(_Target, _Seed, _Mime);
RemoveStatus(_Target, "LLMIME_UNARMED_BONUS_DAMAGE");

IF
CharacterStatusRemoved(_Target, "LLMIME_UNARMED_BONUS_DAMAGE", _)
AND
GetVarObject(_Target, "LLMIME_UnarmedBonusDamageSource", (CHARACTERGUID)_Mime)
THEN
ObjectClearFlag(_Mime, "Mimicry_ApplyingUnarmedDamage");
ClearVarObject(_Target, "LLMIME_UnarmedBonusDamageSource");

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (INTEGER)_Seed, (CHARACTERGUID)_Mime)
AND
Random(_Seed, _Ran)
AND
IntegerModulo(_Ran, 99, _Roll)
AND
_Roll <= 15
THEN
ApplyStatus(_Target, "LLMIME_BLIND_ARMOR_BYPASS", 1.0, 0, _Mime);

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (INTEGER)_Seed, (CHARACTERGUID)_Mime)
AND
Random(_Seed, _Ran)
AND
IntegerModulo(_Ran, 99, _Roll)
AND
_Roll <= 10
THEN
ApplyStatus(_Target, "LLMIME_SLOWED_ARMOR_BYPASS", 1.0, 0, _Mime);

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (INTEGER)_Seed, (CHARACTERGUID)_Mime)
AND
Random(_Seed, _Ran)
AND
IntegerModulo(_Ran, 99, _Roll)
AND
_Roll <= 5
THEN
ApplyStatus(_Target, "LLMIME_WEAK_ARMOR_BYPASS", 1.0, 0, _Mime);
//END_REGION

//REGION DOUBLE_STRIKE
//Set via LLMIME_Skills.gameScript
IF
CharacterCharacterEvent(_Mime, _Target, "Mimicry_Events_DoubleHitRollSuccess")
THEN
ObjectSetFlag(_Mime, "Mimicry_DoubleAttackDisabled");
LLMIME_Brawler_StartDoubleAttack(_Mime, _Target);

IF
CharacterItemEvent(_Mime, _Target, "Mimicry_Events_DoubleHitRollSuccess")
THEN
ObjectSetFlag(_Mime, "Mimicry_DoubleAttackDisabled");
LLMIME_Brawler_StartDoubleAttack(_Mime, _Target);

PROC
LLMIME_Brawler_StartDoubleAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_Temp_DoubleAttackTarget(_Mime, _)
THEN
DB_LLMIME_Brawler_Temp_DoubleAttackTarget(_Mime, _Target);
LeaderLib_StartObjectTimer(_Mime, 1000, "Mimicry_Timers_StartDoubleAttack_", "Mimicry_StartDoubleAttack");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_StartDoubleAttack")
AND
DB_LLMIME_Brawler_Temp_DoubleAttackTarget(_Mime, _Target)
THEN
NOT DB_LLMIME_Brawler_Temp_DoubleAttackTarget(_Mime, _Target);
LLMIME_Brawler_DoubleAttack(_Mime, _Target);

PROC
LLMIME_Brawler_DoubleAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_, _Mime)
AND
GetUUID(_Mime, _ID)
AND
StringConcatenate("LLMIME_Timers_BrawlerDoubleAttack_", _ID, _TimerName)
THEN
CharacterStatusText(_Mime, "LLMIME_StatusText_DoubleStrike");
CharacterUseSkill(_Mime, "Target_LLMIME_DoubleStrike", _Target, 1, 1, 1);
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime);
TimerLaunch(_TimerName, 3000);

IF
AttackedByObject(_Target, _, (CHARACTERGUID)_Mime, _, _)
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, 250);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime)
THEN
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime);
ObjectClearFlag(_Mime, "Mimicry_DoubleAttackDisabled");
//END_REGION

//REGION WEAPON_MIMICKING_STANCE_SAVING
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_WeaponMimickingStarted")
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
ObjectSetFlag(_Mime, "Mimicry_BrawlerStanceWasActive");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimickedWeaponsRemoved")
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStanceWasActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStanceWasActive");
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION INFOSTATUSES
IF
CharacterStatusRemoved(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 0)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
CharacterStatusApplied(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
NOT ObjectGetFlag(_Mime, _DisableInfoFlag, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1);

IF
ObjectFlagSet(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
ObjectFlagCleared(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1);
//END_REGION

//REGION QUERIES
QRY
LLMIME_Brawler_QRY_StanceIsActive((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_DamageTypeMatches((CHARACTERGUID)_Mime, (STRING)_DamageType)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_BrawlerActive((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_BRAWLER_BONUS", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION RESET
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ResetMimeCombatData")
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime)
THEN
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime);
TimerCancel(_TimerName);
ObjectClearFlag(_Mime, "Mimicry_DoubleAttackDisabled");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
