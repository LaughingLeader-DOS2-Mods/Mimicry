Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Mime_InitSettings();

/*Settings*/
//DB_LLMIME_Mime_Skills(_Skill)
//DB_LLMIME_Mime_LearnableSkills(_Skill)
/*Data*/
//DB_LLMIME_Mime_MimeSkillMemory(_Mime, _Skill)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Mime_InitSettings()
THEN
SysClear("DB_LLMIME_Mime_MimeActivatingEquipmentTags", 1);
DB_LLMIME_Mime_MimeActivatingEquipmentTags("LLMIME_ACTIVATE_MIME");

SysClear("DB_LLMIME_Mime_Skills", 1);
DB_LLMIME_Mime_Skills("Shout_LLMIME_BrawlerStance");
DB_LLMIME_Mime_Skills("Shout_LLMIME_OpenMenu");
DB_LLMIME_Mime_Skills("Shout_LLMIME_DisableMimicking");

SysClear("DB_LLMIME_Mime_LearnableSkills", 1);
DB_LLMIME_Mime_LearnableSkills("Shout_LLMIME_DisableMimicking");
//END_REGION

//REGION UPDATE
PROC
LLMIME_System_UpdateDatabases()
THEN
LLMIME_Mime_InitSettings();
LeaderLog_Log("DEBUG", "[LLMIME:Passives:Mime:UpdateDatabases] Settings updated.");
//END_REGION

//REGION QUERIES
QRY
LLMIME_Mime_QRY_IsMimeItem((ITEMGUID)_Item)
AND
DB_LLMIME_Mime_MimeActivatingEquipmentTags(_Tag)
AND
IsTagged(_Item, _Tag, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mime_QRY_SafeToSetup((CHARACTERGUID)_Mime, (ITEMGUID)_Item)
AND
NOT DB_InCharacterCreation(1)
THEN
DB_NOOP(1);
//END_REGION

//REGION MIME_INIT
IF
ItemEquipped(_Item, _Mime)
AND
LLMIME_Mime_QRY_IsMimeItem(_Item)
AND
GlobalGetFlag("LeaderLib_Initialized", 1)
AND
NOT LLMIME_QRY_CharacterIsAMime(_Mime)
AND
NOT DB_LLMIME_Mime_Temp_BlockedItem(_Mime, _Item)
THEN
//LLMIME_RemoveAllModStatuses(_Mime);
SetStoryEvent(_Mime, "Mimicry_InitMimeJob");

IF
ItemEquipped(_Item, _Mime)
AND
LLMIME_Mime_QRY_IsMimeItem(_Item)
AND
NOT GlobalGetFlag("LeaderLib_Initialized", 1)
AND
NOT LLMIME_QRY_CharacterIsAMime(_Mime)
AND
NOT DB_LLMIME_Mime_Temp_BlockedItem(_Mime, _Item)
THEN
DB_LLMIME_Temp_ActivateMime(_Mime);

IF
CharacterCreationFinished(_Mime)
AND
DB_LLMIME_Mime_MimeActivatingEquipmentTags(_Tag)
AND
NOT DB_LLMIME_Temp_ActivateMime(_Mime)
AND
CharacterFindTaggedItem(_Mime, _Tag, _Mask)
THEN
DB_LLMIME_Temp_ActivateMime(_Mime);

IF
GameStarted(_,_)
AND
DB_LLMIME_Temp_ActivateMime(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_InitMimeJob");
NOT DB_LLMIME_Temp_ActivateMime(_Mime);

IF
CharacterResurrected(_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_InitMimeJob");
//END_REGION

//REGION REMOVAL
IF
ItemUnEquipped(_Item, _Mime)
AND
LLMIME_Mime_QRY_IsMimeItem(_Item)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_RemoveMimeJob");
//END_REGION

//REGION SKILLS
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeInitialized")
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
DB_LLMIME_Mime_Skills(_Skill)
AND
CharacterHasSkill(_Mime, _Skill, 0)
THEN
CharacterAddSkill(_Mime, _Skill);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeJobRemoved")
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
DB_LLMIME_Mime_Skills(_Skill)
AND
CharacterHasSkill(_Mime, _Skill, 1)
THEN
CharacterRemoveSkill(_Mime, _Skill);
//END_REGION

//REGION EFFECTS
IF
CanUseItem(_Mime, _Mask, _RequestID)
AND
GetTemplate(_Mask, _Template)
AND
LLMIME_QRY_IsMaskTemplate(_Template)
AND
NOT CharacterGetEquippedItem(_Mime, "Helmet", _Mask)
THEN
PlayEffect(_Mime, "LLMIME_FX_MimeMask_Transform_Root_02");
PlayEffect(_Mime, "LLMIME_FX_MimeMask_Transform_Overlay_Equipped_01");
RequestProcessed(_Mime, _RequestID, 1);

IF
ItemUnEquipped(_Mask, _Mime)
AND
GetTemplate(_Mask, _Template)
AND
LLMIME_QRY_IsMaskTemplate(_Template)
THEN
PlayEffect(_Mime, "LLMIME_FX_MimeMask_Transform_Root_02");
PlayEffect(_Mime, "LLMIME_FX_MimeMask_Transform_Overlay_Unequipped_01");
//END_REGION

//REGION MASK_LEVELING
IF
CharacterLeveledUp(_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_MimeLeveledUp");
//END_REGION

//REGION SKILL_MEMORY
IF
CharacterLearnedSkill(_Mime, _Skill)
AND
DB_LLMIME_Mime_LearnableSkills(_Skill)
AND
NOT DB_LLMIME_Mime_MimeSkillMemory(_Mime, _Skill)
THEN
DB_LLMIME_Mime_MimeSkillMemory(_Mime, _Skill);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeInitialized")
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
DB_LLMIME_Mime_MimeSkillMemory(_Mime, _Skill)
AND
CharacterHasSkill(_Mime, _Skill, 0)
THEN
CharacterAddSkill(_Mime, _Skill);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeJobRemoved")
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
DB_LLMIME_Mime_MimeSkillMemory(_Mime, _Skill)
AND
CharacterHasSkill(_Mime, _Skill, 1)
THEN
CharacterRemoveSkill(_Mime, _Skill);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
