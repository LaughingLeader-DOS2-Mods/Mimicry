Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Dummy_InitSettings();
//DB_LLMIME_Dummy_CharacterDummies(_Dummy)
//DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy)
//DB_LLMIME_Dummy_ItemDummies(_Dummy)
//DB_LLMIME_Dummy_NextItemDummy(_ID, _Dummy)
/*SETTINGS*/
//DB_LLMIME_Dummy_DummyTemplates(_Type, _Template)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Dummy_InitSettings()
THEN
DB_LLMIME_Dummy_DummyTemplates("Character", "LLMIME_Dummy_Character_e2f3f6f7-c069-4928-830e-f1d46e2c898c");
DB_LLMIME_Dummy_DummyTemplates("Item", "LLMIME_Dummy_Item_7384531c-c7ba-45df-ad84-909fa0208047");
//END_REGION

//REGION UPDATING
QRY
LLMIME_Dummy_Internal_QRY_VersionNeedsUpdating((STRING)_Version)
AND
_Version == "-1"
THEN
DB_NOOP(1);

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LLMIME_Dummy_Internal_QRY_VersionNeedsUpdating(_PastVersion)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Dummy] Updating settings from version [",_PastVersion,"]");
LLMIME_Dummy_InitSettings();
//END_REGION

//REGION SPAWNING
QRY
LLMIME_Dummy_Internal_QRY_SetGlobalCreationFlag()
THEN
GlobalSetFlag("LLMIME_CreatingDummy");

PROC
LLMIME_Dummy_Internal_SpawnItemDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
DB_LLMIME_Dummy_DummyTemplates("Item", _Template)
AND
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _)
AND
LLMIME_Dummy_Internal_QRY_SetGlobalCreationFlag() // Prevent behavior init script events
AND
CharacterGetHostCharacter(_Host) // So the dummy doesn't spawn outside bounds
AND
GetPosition(_Host, _hx, _hy, _hz)
AND
CreateItemTemplateAtPosition(_Template, _hx, _hy, _hz, _Dummy)
AND
GetUUID(_Dummy, _DummyID)
THEN
SetVarString(_Dummy, "LLMIME_UUID", _DummyID);
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:SpawnDummy(Item)] Spawned dummy and set ID to [",_ID,"].");
SetTag(_Dummy, "LLMIME_Dummy");
LLMIME_Dummy_SetDummyID(_Dummy, _ID);
SetVisible(_Dummy, 0);
SetInvulnerable_UseProcSetInvulnerable(_Dummy, 1);
DB_LLMIME_Dummy_ItemDummies(_Dummy);
DB_LLMIME_Dummy_NextItemDummy(_ID, _Dummy);
GlobalClearFlag("LLMIME_CreatingDummy");
TeleportToPosition(_Dummy, _x, _y, _z, _ID, 0);

PROC
LLMIME_Dummy_Internal_SpawnCharacterDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
DB_LLMIME_Dummy_DummyTemplates("Character", _Template)
AND
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _)
AND
LLMIME_Dummy_Internal_QRY_SetGlobalCreationFlag() // Prevent behavior init script events
AND
CharacterGetHostCharacter(_Host) // So the dummy doesn't spawn outside bounds
AND
GetPosition(_Host, _hx, _hy, _hz)
AND
//TemporaryCharacterCreateAtPosition(_hx, _hy, _hz, "S_LLMIME_Scripting_Dummy_e2f3f6f7-c069-4928-830e-f1d46e2c898c", 0, _Dummy)
TemporaryCharacterCreateAtPositionOutOfSightTo(_hx, _hy, _hz, "S_LLMIME_Scripting_Dummy_e2f3f6f7-c069-4928-830e-f1d46e2c898c", 0, 0, "", _Dummy)
AND
GetUUID(_Dummy, _DummyID)
THEN
SetVarString(_Dummy, "LLMIME_UUID", _DummyID);
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:SpawnDummy(Character)] Spawned dummy and set ID to [",_ID,"].");
SetTag(_Dummy, "LLMIME_Dummy");
LLMIME_Dummy_SetDummyID(_Dummy, _ID);
CharacterSetImmortal(_Dummy, 1);
SetVisible(_Dummy, 0);
SetInvulnerable_UseProcSetInvulnerable(_Dummy, 1);
CharacterSetDetached(_Dummy, 1);
DB_LLMIME_Dummy_CharacterDummies(_Dummy);
DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy);
GlobalClearFlag("LLMIME_CreatingDummy");
TeleportToPosition(_Dummy, _x, _y, _z, _ID, 0);
//END_REGION

//REGION DELETE
PROC
LLMIME_Dummy_MarkForDeletion((GUIDSTRING)_Dummy)
THEN
LLMIME_Dummy_MarkForDeletion(_Dummy, 500);

PROC
LLMIME_Dummy_MarkForDeletion((GUIDSTRING)_Dummy, (INTEGER)_Delay)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
AND
GetUUID(_Dummy, _ID)
AND
StringConcatenate("LLMIME_Timers_DeleteDummy_", _ID, _TimerName)
THEN
//CharacterSetForceSynch(_Dummy, 0);
DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy);
TimerLaunch(_TimerName, _Delay);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy)
AND
ObjectIsItem((ITEMGUID)_Dummy, 1)
THEN
SetInvulnerable_UseProcSetInvulnerable(_Dummy, 0);
ItemDestroy(_Dummy);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy)
AND
ObjectIsCharacter((CHARACTERGUID)_Dummy, 1)
THEN
CharacterSetImmortal(_Dummy, 0);
CharacterDieImmediate(_Dummy, 0, "");

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy)
THEN
NOT DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy);
LLMIME_Dummy_Internal_DeleteDummyFromDatabases(_Dummy);
SetOnStage(_Dummy, 0);
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:DeleteDummy] Dummy deleted after timer [",_TimerName,"] finished.");

PROC
LLMIME_Dummy_StopDeletion((GUIDSTRING)_Dummy)
AND
DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy)
THEN
NOT DB_LLMIME_DeleteDummyTimer(_TimerName, _Dummy);
TimerCancel(_TimerName);

PROC
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_NextCharacterDummy(_ID, (CHARACTERGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy);

PROC
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_CharacterDummies((CHARACTERGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_CharacterDummies(_Dummy);

PROC
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_NextItemDummy(_ID, (ITEMGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _Dummy);

PROC
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_ItemDummies((ITEMGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_ItemDummies(_Dummy);
//END_REGION

//REGION RESET
IF
StoryEvent(_Dummy, "LLMIME_Events_ResetDummyID")
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
THEN
LLMIME_Dummy_ResetDummy(_Dummy);

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
AND
NOT GetVarString(_Dummy, "LLMIME_DummyID", _)
THEN
SetVarString(_Dummy, "LLMIME_DummyID", "");
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummy] Dummy has no ID.");

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
AND
GetVarString(_Dummy, "LLMIME_DummyID", _CurrentID)
AND
_CurrentID != ""
THEN
SetVarString(_Dummy, "LLMIME_DummyID", "");
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummy] Reset Dummy ID for Dummy with ID [",_CurrentID,"].");

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_NextCharacterDummy(_ID, (CHARACTERGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _Dummy);

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
DB_LLMIME_Dummy_NextItemDummy(_ID, (ITEMGUID)_Dummy)
THEN
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _Dummy);

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
AND
ObjectIsOnStage(_Dummy, 1)
THEN
SetOnStage(_Dummy, 0);
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummy] Set dummy off stage.");

PROC
LLMIME_Dummy_ResetDummy((GUIDSTRING)_Dummy)
AND
NOT IsTagged(_Dummy, "LLMIME_Dummy", 1)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummy] [ERROR] Object is not tagged as a dummy!");

PROC
LLMIME_Dummy_ResetDummyAfterDelay((GUIDSTRING)_Dummy, (INTEGER)_Delay)
AND
DB_LLMIME_ResetDummyTimer(_TimerName, _Dummy)
AND
GetUUID(_Dummy, _ID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummyAfterDelay] Timer for dummy [",_ID,"] already running. Resetting timer.");
TimerCancel(_TimerName);
TimerLaunch(_TimerName, _Delay);

PROC
LLMIME_Dummy_ResetDummyAfterDelay((GUIDSTRING)_Dummy, (INTEGER)_Delay)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
AND
NOT DB_LLMIME_ResetDummyTimer(_, _Dummy)
AND
GetUUID(_Dummy, _ID)
AND
StringConcatenate("LLMIME_Timers_ResetDummyAfterDelay_", _ID, _TimerName)
AND
IntegertoString(_Delay, _DelayStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummyAfterDelay] Resetting dummy [",_ID,"] after timer delay [",_TimerName,"|",_DelayStr,"ms].");
DB_LLMIME_ResetDummyTimer(_TimerName, _Dummy);
TimerLaunch(_TimerName, _Delay);

IF
TimerFinished(_TimerName)
AND
DB_LLMIME_ResetDummyTimer(_TimerName, _Dummy)
THEN
NOT DB_LLMIME_ResetDummyTimer(_TimerName, _Dummy);
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:ResetDummyTimer] Timer finished. Resetting dummy.");
LLMIME_Dummy_ResetDummy(_Dummy);
//END_REGION

//REGION CLEANUP
IF
GameStarted(_,_)
AND
DB_LLMIME_Dummy_CharacterDummies(_Dummy)
AND
ObjectExists(_Dummy, 0)
THEN
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy);

IF
GameStarted(_,_)
AND
DB_LLMIME_Dummy_ItemDummies(_Dummy)
AND
ObjectExists(_Dummy, 0)
THEN
LLMIME_Dummy_Internal_DeleteDummyFromDatabases((GUIDSTRING)_Dummy);
//END_REGION

//REGION SCRIPT_INIT
IF
StoryEvent(_Dummy, "LLMIME_Events_DummyInitialized")
AND
NOT GlobalGetFlag("LLMIME_CreatingDummy", 1)
AND
IsTagged(_Dummy, "LLMIME_Dummy", 1)
THEN
LLMIME_Dummy_Internal_RegisterDummy(_Dummy);

PROC
LLMIME_Dummy_Internal_RegisterDummy((GUIDSTRING)_Dummy)
AND
ObjectIsCharacter(_Dummy, 1)
AND
NOT DB_LLMIME_Dummy_CharacterDummies((CHARACTERGUID)_Dummy)
THEN
DB_LLMIME_Dummy_CharacterDummies(_Dummy);
SetVarString(_Dummy, "LLMIME_DummyID", "");
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:RegisterDummy(Character)] Registered pre-existing dummy and reset ID.");

PROC
LLMIME_Dummy_Internal_RegisterDummy((GUIDSTRING)_Dummy)
AND
ObjectIsItem(_Dummy, 1)
AND
NOT DB_LLMIME_Dummy_ItemDummies((ITEMGUID)_Dummy)
THEN
DB_LLMIME_Dummy_ItemDummies(_Dummy);
SetVarString(_Dummy, "LLMIME_DummyID", "");
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:RegisterDummy(Character)] Registered pre-existing dummy and reset ID.");
//END_REGION

//REGION DUMMY_ID
QRY
LLMIME_Dummy_QRY_IsDefaultDummyID("")
THEN
DB_NOOP(1);

QRY
LLMIME_Dummy_QRY_IsDefaultDummyID("Default")
THEN
DB_NOOP(1);

QRY
LLMIME_Dummy_QRY_IsDefaultOrMatchesDummyID((GUIDSTRING)_Dummy, (STRING)_CheckID)
AND
GetVarString(_Dummy, "LLMIME_DummyID", _CurrentID)
AND
LLMIME_Dummy_QRY_IsDefaultDummyID(_CurrentID)
THEN
DB_NOOP(1);

QRY
LLMIME_Dummy_QRY_IsDefaultOrMatchesDummyID((GUIDSTRING)_Dummy, (STRING)_CheckID)
AND
GetVarString(_Dummy, "LLMIME_DummyID", _CurrentID)
AND
NOT LLMIME_Dummy_QRY_IsDefaultDummyID(_CurrentID)
AND
_CurrentID == _CheckID
THEN
DB_NOOP(1);

PROC
LLMIME_Dummy_SetDummyID((GUIDSTRING)_Dummy, (STRING)_ID)
AND
GetVarString(_Dummy, "LLMIME_DummyID", _CurrentID)
AND
_CurrentID != _ID
THEN
SetVarString(_Dummy, "LLMIME_DummyID", _ID);
SetStoryEvent(_Dummy, "LLMIME_Events_DummyIDSet"); // Trigger the reset timer in behavior script

PROC
LLMIME_Dummy_SetDummyID((GUIDSTRING)_Dummy, (STRING)_ID)
AND
NOT GetVarString(_Dummy, "LLMIME_DummyID", _)
THEN
SetVarString(_Dummy, "LLMIME_DummyID", _ID);
SetStoryEvent(_Dummy, "LLMIME_Events_DummyIDSet"); // Trigger the reset timer in behavior script
//END_REGION

//REGION CREATE_DUMMY
QRY
LLMIME_Dummy_QRY_CreateCharacterDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
THEN
LLMIME_Dummy_CreateCharacterDummy(_ID, _x, _y, _z);

PROC
LLMIME_Dummy_CreateCharacterDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _)
THEN
LLMIME_Dummy_Internal_CreateOrFindDummy("Character", _ID, _x, _y, _z);

PROC
LLMIME_Dummy_Internal_CreateOrFindDummy("Character", (STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
DB_LLMIME_Dummy_CharacterDummies(_Dummy)
AND
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _)
AND
LLMIME_Dummy_QRY_IsDefaultOrMatchesDummyID((GUIDSTRING)_Dummy, _ID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:CreateOrFindDummy(Character)] Found existing dummy. Setting ID to [",_ID,"] and moving to target position.");
LLMIME_Dummy_SetDummyID(_Dummy, _ID);
DB_LLMIME_Dummy_NextCharacterDummy(_ID, (CHARACTERGUID)_Dummy);
TeleportToPosition(_Dummy, _x, _y, _z, _ID, 0);
SetOnStage(_Dummy, 1);

PROC
LLMIME_Dummy_Internal_CreateOrFindDummy("Character", (STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
NOT DB_LLMIME_Dummy_NextCharacterDummy(_ID, _)
THEN
LLMIME_Dummy_Internal_SpawnCharacterDummy(_ID, _x, _y, _z);

QRY
LLMIME_Dummy_QRY_CreateItemDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
THEN
LLMIME_Dummy_CreateItemDummy(_ID, _x, _y, _z);

PROC
LLMIME_Dummy_CreateItemDummy((STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _)
THEN
LLMIME_Dummy_Internal_CreateOrFindDummy("Item", _ID, _x, _y, _z);

PROC
LLMIME_Dummy_Internal_CreateOrFindDummy("Item", (STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
DB_LLMIME_Dummy_ItemDummies(_Dummy)
AND
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _)
AND
LLMIME_Dummy_QRY_IsDefaultOrMatchesDummyID((GUIDSTRING)_Dummy, _ID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimic:Dummy:CreateOrFindDummy(Item)] Found existing dummy. Setting ID to [",_ID,"] and moving to target position.");
LLMIME_Dummy_SetDummyID(_Dummy, _ID);
DB_LLMIME_Dummy_NextItemDummy(_ID, (ITEMGUID)_Dummy);
TeleportToPosition(_Dummy, _x, _y, _z, _ID, 0);
SetOnStage(_Dummy, 1);

PROC
LLMIME_Dummy_Internal_CreateOrFindDummy("Item", (STRING)_ID, (REAL)_x, (REAL)_y, (REAL)_z)
AND
NOT DB_LLMIME_Dummy_NextItemDummy(_ID, _)
THEN
LLMIME_Dummy_Internal_SpawnItemDummy(_ID, _x, _y, _z);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
