Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION

//Fix for CharacterHeal sending vitality over the max
IF
CharacterVitalityChanged(_Target, _Percentage)
AND
ObjectGetFlag(_Target, "Mimicry_Wish_CheckHealthResult", 1)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Target, "Mimicry_Wish_CheckHealthResult")
AND
_Percentage > 100
THEN
CharacterSetHitpointsPercentage(_Target, 100.0);

//REGION FINAL_WISH
IF
CharacterResurrected(_Target)
AND
DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster)
THEN
NOT DB_LLMIME_Skills_FinalWish_Target(_Target, _Caster);
CharacterCharacterSetEvent(_Target, _Caster, "Mimicry_Events_RevivedByFinalWish");
LeaderLog_Log("DEBUG", "[Mimicry:Skills:CharacterResurrected] Final Wish target detected.");

//Remove [LLMIME_FINAL_WISH_BUFF] after a delay.
IF
CharacterReceivedDamage(_Character, _, _)
AND
HasActiveStatus(_Character, "LLMIME_FINAL_WISH_BUFF", 1)
THEN
SetStoryEvent(_Character, "Mimicry_Events_FinalWish_OnAttacked");
//END_REGION

//REGION DECOY
IF
ObjectTurnEnded((CHARACTERGUID)_Character)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
CharacterCharacterSetEvent(_Character, _Decoy, "Mimicry_Events_Decoy_TauntNearbyEnemies");

/* Disabled for now - having to stay invisible for 2 turns to get the full use out of the decoy is a little much.
IF
CharacterStatusRemoved(_Character, "LLMIME_DECOY_ACTIVE", _)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Character, "LLMIME_DECOY_ACTIVE")
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
LLMIME_Skills_Internal_OnDecoyRemoved(_Decoy);
*/
//CharacterDieImmediate(_Decoy, 0, "None");

IF
CharacterPrecogDying(_Decoy)
AND
DB_LLMIME_Skills_Temp_Decoy(_Character, _Decoy)
THEN
LLMIME_Skills_Internal_OnDecoyRemoved(_Decoy);
//END_REGION

//REGION MUGGABLE_FLAG

//DB_LLMIME_Skills_Temp_DisabledCharacter is checked when LLMIME_MUGGING is applied.
PROC
LeaderLib_StatusEvents_OnDisablingStatusApplied((CHARACTERGUID)_Character, (GUIDSTRING)_Cause, (STRING)_Status, (STRING)_Type)
THEN
DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, _Status);
LeaderLog_Log("DEBUG", "[LLMIME:StatusEvents:OnDisablingStatusApplied] Disabling status [",_Status,"](",_Type,") was applied to character.");

IF
CharacterStatusRemoved(_Character, _Status, _)
AND
DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, _Status)
THEN
NOT DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, _Status);
//END_REGION

//REGION DU_SUPPORT
IF
CharacterStatusApplied(_Character, "KCE_KNOCKED_DOWN", _)
THEN
DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, "KCE_KNOCKED_DOWN");

IF
CharacterStatusRemoved(_Character, "KCE_KNOCKED_DOWN", _)
AND
DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, "KCE_KNOCKED_DOWN")
THEN
NOT DB_LLMIME_Skills_Temp_DisabledCharacter(_Character, "KCE_KNOCKED_DOWN");
//END_REGION

IF
CharacterStatusAttempt(_Target, "DYING", _)
AND
DB_LLMIME_Skills_Temp_UnholyDarknessTarget(_Mime, _Target)
THEN
NOT DB_LLMIME_Skills_Temp_UnholyDarknessTarget(_Mime, _Target);
CharacterCharacterSetEvent(_Mime, _Target, "LLMIME_Skills_Unholy_DeathExplosion");
LeaderLog_Log("DEBUG", "[LLMIME_10_TS_Skills_01_MimeSkills:CharacterPrecogDying] Creating Unholy Darkness death explosion.");

//REGION FATALITY
IF
CharacterDying(_Target)
AND
DB_LLMIME_Skills_Fatality_ListenForDeath(_Mime, _Target)
THEN
NOT DB_LLMIME_Skills_Fatality_ListenForDeath(_Mime, _Target);
LeaderLib_Timers_StartObjectTimer(_Mime, 1000, "LLMIME_Timers_Skills_ResetFatalityCooldown", "LLMIME_Skills_ResetFatalityCooldown");
LeaderLog_Log("DEBUG", "[LLMIME_10_TS_Skills_01_MimeSkills:CharacterDied] Target of Deathblow died. Resetting cooldown.");
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLMIME_10_ToggleScripts"