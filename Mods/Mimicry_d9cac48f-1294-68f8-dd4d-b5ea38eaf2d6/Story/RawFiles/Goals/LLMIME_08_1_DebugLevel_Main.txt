Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_WaypointInfo((ITEMGUID)S_LLMIME_TestLevelWaypointShrine_9955a6a5-c7ca-40aa-8fa8-9c3699d65032,(TRIGGERGUID)S_LLMIME_Debug_Waypoint_e81af9c7-8f99-4050-8ab8-1101954a97af,"WAYP_LLMIME_TestLevel");

Proc_LLMIME_IterateGameAlreadyStarted();

GlobalSetFlag("LeaderLog_Trace_Enabled");

ProcTriggerRegisterForPlayers((TRIGGERGUID)TRIGGERGUID_MusicVolumeTrigger_LLMIME_Debug_MusicTest_80649d71-e657-4c35-be19-708559c0c60c);
KBSECTION
//REGION INIT

IF
GameStarted("TestLevel_LL_Mimicry", 1)
THEN
DB_LLMIME_Debug_GameStarted(1);
TimerLaunch("LLMIME_Debug_Start", 500);
TimerLaunch("LLMIME_Debug_Test", 1000);
LeaderLib_Treasure_Register_TreasureToTrader("LLMIME.LeaderTrader.DebugTest", "LeaderLib.LeaderTrader");
LeaderLib_Treasure_Register_TreasureTable("LLMIME.LeaderTrader.DebugTest", "CheatAllWeapons", "", 1);
LeaderLib_Treasure_Register_TreasureToTrader("LLMIME.LeaderTrader.DebugTest2", "LeaderLib.LeaderTrader");
LeaderLib_Treasure_Register_TreasureToObject("LLMIME.LeaderTrader.DebugTest2", ITEMGUID_LLMIME_Debug_TestScriptingChest_fbe7bf08-9826-4e1c-a4dd-732d54499176);
LeaderLib_Treasure_Register_TreasureTable("LLMIME.LeaderTrader.DebugTest2", "Cheat2HMaces", "", 1);
LeaderLib_Treasure_Configure_AddDeltaMod("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "Boost_Weapon_Status_Set_Crippled_Mace", -1);
LeaderLib_Treasure_Configure_AddDeltaMod("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "Boost_Weapon_EmptyRuneSlot", -1);
LeaderLib_Treasure_Configure_AddDeltaMod("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "Boost_Weapon_EmptyRuneSlot", -1);
LeaderLib_Treasure_Configure_AddDeltaMod("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "Boost_Weapon_EmptyRuneSlot", 75);
DB_LeaderLib_Treasure_DeltaModLimit("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "Boost_Weapon_EmptyRuneSlot", 99);
//LeaderLib_Treasure_Configure_AddRune("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "LOOT_Rune_Flame_Large_9ac874d8-a7e5-48b1-954a-b11b46f6f390", -1);
//LeaderLib_Treasure_Configure_AddRune("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "LOOT_Rune_Frost_Small_42a657df-428c-48d0-a640-c1fbc65268ca", -1);
//LeaderLib_Treasure_Configure_AddRune("LLMIME.LeaderTrader.DebugTest2", "WPN_Mace_2H", "LOOT_Rune_Masterwork_Giant_fca17b46-c1dc-4cc2-bd61-5df21d55d15e", -1);
ItemAddDeltaModifier(ITEMGUID_WPN_Wand_A_Water_000_08d2402f-06bb-488b-b23c-c09e27d0fd27, "Boost_Weapon_EmptyRuneSlot");
ItemAddDeltaModifier(ITEMGUID_WPN_Wand_A_Water_000_08d2402f-06bb-488b-b23c-c09e27d0fd27, "Boost_Weapon_EmptyRuneSlot");

IF
GameStarted("TestLevel_LL_Mimicry", 0)
THEN
CharacterSetHitpointsPercentage(CHARACTERGUID_Elves_Male_Clothing_002_36f910a9-e4e9-493b-828a-3f3a9368c617, 100.0);
CharacterSetHitpointsPercentage(CHARACTERGUID_Elves_Male_Clothing_001_5eb986d0-d085-41ab-8806-d2477797832f, 100.0);
CharacterSetHitpointsPercentage(CHARACTERGUID_Elves_Male_Clothing_004_0e77fc6a-d4d8-4ab4-bb23-77b9140f3c90, 100.0);
CharacterSetHitpointsPercentage(CHARACTERGUID_Elves_Male_Clothing_003_8122b9ab-28a8-448b-b9cd-f1ccc1da6637, 100.0);
CharacterSetHitpointsPercentage(CHARACTERGUID_Elves_Male_Clothing_000_95424c71-3223-4414-aa3e-44437e18051b, 100.0);

IF
TimerFinished("LLMIME_Debug_Test")
AND
DB_IsPlayer(_Player)
THEN
UnlockWaypoint("WAYP_LLMIME_TestLevel", ITEMGUID_S_LLMIME_TestLevelWaypointShrine_9955a6a5-c7ca-40aa-8fa8-9c3699d65032, _Player);

IF
TimerFinished("LLMIME_Debug_Test")
AND
DB_IsPlayer(_Player)
AND
NOT GetItemForItemTemplateInInventory(_Player, "UNIQUE_LLMIME_MusicBox_fd03b00c-5366-40e2-a8af-1d9f6a904ecb", _)
THEN
ItemTemplateAddTo("UNIQUE_LLMIME_MusicBox_fd03b00c-5366-40e2-a8af-1d9f6a904ecb", _Player, 1);
LLMIME_Debug_TracePartyCount(_Player);

/*
IF
CharacterStatusAttempt(_Char, "INVISIBLE", _)
THEN
RemoveStatus(_Char, "INVISIBLE");
*/

/*
IF
TimerFinished("LLMIME_Debug_Test")
THEN
//LeaderLib_Math_Sine(131.0);
//LeaderLib_Math_Cosine(131.0);
*/

IF
CharacterJoinedParty(_)
AND
DB_IsPlayer(_Player)
THEN
LLMIME_Debug_TracePartyCount(_Player);

IF
CharacterLeftParty(_)
AND
DB_IsPlayer(_Player)
THEN
LLMIME_Debug_TracePartyCount(_Player);

PROC
LLMIME_Debug_TracePartyCount((CHARACTERGUID)_Player)
AND
GetVarInteger(_Player, "LeaderLib_PartyCount", _Count)
AND
IntegertoString(_Count, _CountStr)
AND
CharacterGetDisplayName(_Player, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:PartyCount] [",_Name,"] party count is [",_CountStr,"].");

/*
IF
DB_LeaderLib_Math_Sine(131.0, _Result)
AND
CharacterGetHostCharacter(_Char)
THEN
LeaderLog_RealToString(_Char, _Result, "LLMIME_Debug_SineResultConverted");

IF
StoryEvent(_Char, "LLMIME_Debug_SineResultConverted")
AND
GetVarString(_Char, "LeaderLog_RealString", _RealStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:Math] Sine | Angle [131] = [",_RealStr,"]");

IF
StoryEvent((CHARACTERGUID)_Char, "LLMIME_Debug_SineResultConverted")
AND
DB_LeaderLib_Math_Cosine(131.0, _Result)
THEN
LeaderLog_RealToString(_Char, _Result, "LLMIME_Debug_CosineResultConverted");

IF
StoryEvent(_Char, "LLMIME_Debug_CosineResultConverted")
AND
GetVarString(_Char, "LeaderLog_RealString", _RealStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:Math] Cosine | Angle [131] = [",_RealStr,"]");
*/
/*
IF
RegionEnded("TestLevel_LL_Mimicry")
AND
DB_IsPlayer(_Player)
THEN
LLMIME_RemoveAllMimicryStatuses(_Player);
*/

IF
RegionEnded("TestLevel_LL_Mimicry")
THEN
NOT DB_LLMIME_Debug_GameStarted(1);
NOT DB_LLMIME_Debug_IteratingPlayers(1);
GoalCompleted;
SysActivateGoal("LLMIME_8_0_DebugLevel");

IF
TimerFinished("LLMIME_Debug_Start")
AND
NOT DB_LLMIME_Debug_IteratingPlayers(_)
THEN
DB_LLMIME_Debug_IteratingPlayers(1);
CharacterLaunchIterator("LLMIME_Events_Debug_IterateCharacters");

IF
StoryEvent((CHARACTERGUID)_Character, "LLMIME_Events_Debug_IterateCharacters")
AND
IsTagged(_Character, "COMPANION", 1)
THEN
CharacterSetHitpointsPercentage(_Character, 50.0);
DB_Dialogs(_Character, "LLMIME_Debug_RecruitCharacter");

IF
StoryEvent((CHARACTERGUID)_Player, "LLMIME_Events_Debug_IterateCharacters")
AND
IsTagged(_Player, "COMPANION", 0)
AND
CharacterIsPlayer(_Player, 1)
AND
GetPosition(_Player, _x, _y, _z)
//AND
//CreateItemTemplateAtPosition("LOOT_BackPack_A_6c70c298-aa29-418f-a659-f8e0b5f5fa60", _x, _y, _z, _Backpack)
THEN
SetTag(_Player, "AVATAR");
//SetTag(_Backpack, "LLMIME_DEBUG_DELETEALL");
//MoveAllItemsTo(_Player, _Backpack, 1, 1, 1);
//SetStoryEvent(_Player, "Mimicry_InitMimeJob");
//CharacterTransformAppearanceToWithEquipmentSet(_Player, _Player, "LLMIME_Class_Mime_Start", 0);
DB_LLMIME_Debug_HostPlayer(_Player);
//DB_LLMIME_Debug_DeleteBackpack(_Backpack);
//CharacterAddSkill(_Player, "Target_Debug_KillCommand");
//CharacterAddSkill(_Player, "Target_EnemyResurrect");
CharacterAddSkill(_Player, "Jump_LLMIME_HiddenApproach");
CharacterAddSkill(_Player, "Shout_LLMIME_TimelyRetreat");
CharacterAddSkill(_Player, "Jump_LLMIME_Debug_Textkeys");
//END_REGION

IF
ObjectFlagSet("LLMIME_IsCompanion", (CHARACTERGUID)_Character, _Instance)
THEN
CharacterMakePlayer(_Character);
CharacterStopFollow(_Character);
CharacterDetachFromGroup(_Character);
DB_IsPlayer(_Character);

IF
ObjectFlagCleared("LLMIME_IsCompanion", (CHARACTERGUID)_Character, _Instance)
THEN
CharacterDetachFromGroup(_Character);
CharacterMakeNPC(_Character);
NOT DB_IsPlayer(_Character);

/*
IF
StoryEvent((CHARACTERGUID)_Character, "LLMIME_Events_Debug_IterateCharacters")
AND
IsTagged(_Character, "COMPANION", 1)
AND
CharacterGetHostCharacter(_Player)
AND
_Character != _Player
AND
IsTagged(_Player, "COMPANION", 0)
THEN
CharacterRecruitCharacter(_Character, _Player);
CharacterStopFollow(_Character);
*/

IF
StoryEvent(CHARACTERGUID_LLMIME_MimeCompanion_ElfMale_3f625a37-59d0-41b5-81df-695abd2975e9, "LLMIME_Events_Debug_IterateCharacters")
THEN
SetTag(CHARACTERGUID_LLMIME_MimeCompanion_ElfMale_3f625a37-59d0-41b5-81df-695abd2975e9, "LeaderLib_Follower_DisableAutoResetPosition");

IF
StoryEvent((CHARACTERGUID)_Character, "LLMIME_Events_Debug_IterateCharacters")
AND
CharacterGetHostCharacter(_Host)
AND
CharacterIsEnemy(_Character, _Host, 0)
THEN
CharacterEnableWaypointUsage(_Character, 1);
SetHomesteadKeyState(1, _Character);
CharacterAddAttribute(_Character, "Finesse", 1);
CharacterAddAttribute(_Character, "Strength", 1);
CharacterAddAttribute(_Character, "Wits", 1);
CharacterAddAttribute(_Character, "Intelligence", 1);
CharacterAddAttribute(_Character, "Constitution", 1);
//CharacterLevelUpTo(_Character, 10);
CharacterOverrideMaxSourcePoints(_Character, 10);
CharacterAddSourcePoints(_Character, 10);

IF
StoryEvent((CHARACTERGUID)_Character, "LLMIME_Events_Debug_IterateCharacters")
AND
IsTagged(_Character, "LLMIME_MimeFollower", 0)
THEN
CharacterAddSkill(_Character, "Target_LLMIME_Wish", 0);

/*
IF
StoryEvent((CHARACTERGUID)_Character, "LLMIME_Events_Debug_IterateCharacters")
AND
DB_LLMIME_Templates("Mask_A", _Template)
AND
NOT GetItemForItemTemplateInInventory(_Character, _Template, _)
THEN
ItemTemplateAddTo(_Template, _Character, 1);
CharacterAddSkill(_Character, "Target_LLMIME_Wish", 0);
*/

/*
IF
StoryEvent(CHARACTERGUID_LLMIME_Debug_PartyMember3_9c02760e-befa-4026-a214-ecbeaa7de64a, "LLMIME_Events_Debug_IterateCharacters")
THEN
SetStoryEvent(CHARACTERGUID_LLMIME_Debug_PartyMember3_9c02760e-befa-4026-a214-ecbeaa7de64a, "Mimicry_InitMimeJob");
*/

IF
StoryEvent(NULL_00000000-0000-0000-0000-000000000000, "LLMIME_Events_Debug_IterateCharacters")
THEN
NOT DB_LLMIME_Debug_IteratingPlayers(1);
//TimerLaunch("LLMINE_Events_UnequipDummy", 300);
IterateParties("LLMIME_Events_Debug_AddPlayers");

IF
TimerFinished("LLMINE_Events_UnequipDummy")
AND
DB_LLMIME_Debug_HostPlayer(_Player)
THEN
DB_LLMIME_Debug_UnequipInSlot(_Player, "Weapon");
DB_LLMIME_Debug_UnequipInSlot(_Player, "Helmet");

IF
DB_LLMIME_Debug_UnequipInSlot((CHARACTERGUID)_Player, (STRING)_Slot)
AND
CharacterGetEquippedItem(_Player, _Slot, (ITEMGUID)_Item)
THEN
CharacterUnequipItem(_Player, _Item);
ItemRemove(_Item);

PROC
Proc_LLMIME_IterateGameAlreadyStarted()
AND
DB_LLMIME_Debug_GameStarted(1)
THEN
TimerLaunch("LLMIME_Debug_Start", 100);

IF
StoryEvent((CHARACTERGUID)_Player, "LLMIME_Events_Debug_AddPlayers")
AND
NOT DB_IsPlayer(_Player)
AND
CharacterIsPlayer(_Player, 1)
THEN
DB_IsPlayer(_Player);

IF
CharacterUsedSkill(_Character,_,_,_)
AND
CharacterIsPlayer(_Character, 1)
THEN
CharacterResetCooldowns(_Character);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
AND
NOT DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
AND
GlobalGetFlag("Mimicry_Mimic_CombatOnlyDisabled", 0)
THEN
GlobalSetFlag("Mimicry_Mimic_CombatOnlyDisabled");
DisplayText(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83, "Mimic Enabled Outside of Combat");
DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
AND
NOT DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
AND
GlobalGetFlag("Mimicry_Mimic_CombatOnlyDisabled", 1)
THEN
GlobalClearFlag("Mimicry_Mimic_CombatOnlyDisabled");
DisplayText(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83, "Mimic Disabled Outside of Combat");
DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
AND
DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83)
THEN
NOT DB_LLMIME_Debug_LeverToggle(ITEMGUID_LLMIME_TestLevel_Lever_ToggleGlobalFlags_32ee1fc8-3a1f-4293-85eb-45c59dc25d83);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_Debug_TransformIntoMime_1667be7d-cb2e-497e-8d71-b5a2eac0d641)
THEN
//CharacterTransformAppearanceTo(_Character, CHARACTERGUID_LLMIME_MimeCompanion_ElfMale_3f625a37-59d0-41b5-81df-695abd2975e9, 1, 1);
CharacterTransformAppearanceToWithEquipmentSet(_Character, CHARACTERGUID_LLMIME_MimeCompanion_ElfMale_3f625a37-59d0-41b5-81df-695abd2975e9, "Class_LLMIME_Mime_Preview", 1);
//MoviePlay(_Character, "CS_BackToRC");
//MoviePlay(_Character, "Test");
//ApplyStatus(_Character, "HASTED", 30.0, 1);
//ApplyStatus(_Character, "LLMIME_SOURCE_REGENERATION_HIDDEN", 24.0, 0);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_Debug_Lever_LevelUpMimeFollower_69094caf-1984-4812-aca0-f7e0c1071380)
THEN
CharacterAddAttribute(_Character, "Memory", 10);
CharacterAddSkill(_Character, "Shout_LLMIME_BrawlerStance", 0);
CharacterAddSkill(_Character, "Shout_LLMIME_OpenMenu", 0);

IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_Debug_Lever_LevelUpMimeFollower_69094caf-1984-4812-aca0-f7e0c1071380)
AND
DB_LeaderLib_Growth_Characters_Skills("Mimicry.MimeFollower", _MinLevel, _Skill, _MatchType, _MatchValue)
THEN
CharacterAddSkill(_Character, _Skill, 0);

/*
IF
CharacterUsedItem(_Character, ITEMGUID_LLMIME_Debug_Lever_LevelUpMimeFollower_69094caf-1984-4812-aca0-f7e0c1071380)
AND
CharacterGetLevel(_Character, _Level)
THEN
CharacterLevelUpTo(CHARACTERGUID_LLMIME_MimeCompanion_ElfMale_3f625a37-59d0-41b5-81df-695abd2975e9, _Level);
*/

//REGION TEXT_EVENTS
/*
IF
TextEventSet("mimicdummy")
AND
DB_LLMIME_MimicNextAction(_Mime)
AND
GetPosition(_Mime, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LLMIME_TargetDummy_7384531c-c7ba-45df-ad84-909fa0208047", _x, _y, _z, _Dummy)
//CreateItemTemplateAtPosition("LLMIME_CONT_Barrel_A_Water_a2573a2d-5556-4c82-b004-aa7d5130b1e6", _x, _y, _z, _Dummy)
THEN
DebugBreak("[LLMIME:Position] Spawned skill dummy.");
*/

IF
TextEventSet("llmime_setup")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
THEN
CharacterAddAttribute(_Player, "Memory", 10);

IF
TextEventSet("llmime_setup")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
DB_LLMIME_Mime_Skills(_Skill)
THEN
CharacterAddSkill(_Player, _Skill, 0);

IF
TextEventSet("llmime_setup")
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player, 1)
AND
DB_LLMIME_Mime_LearnableSkills(_Skill)
THEN
CharacterAddSkill(_Player, _Skill, 0);

IF
TextEventSet("mimicdupe")
AND
GlobalGetFlag("LLMIME_DUPLICATE_ITEMS", _Val)
AND
IntegerSubtract(1, _Val, _NextVal)
THEN
LLMIME_Debug_SetGlobalFlag("LLMIME_DUPLICATE_ITEMS", _NextVal);

PROC
LLMIME_Debug_SetGlobalFlag((STRING)_Flag, 0)
AND
StringConcatenate(_Flag, " cleared.", _Message)
THEN
DebugBreak(_Message);
GlobalClearFlag(_Flag);

PROC
LLMIME_Debug_SetGlobalFlag((STRING)_Flag, 1)
AND
StringConcatenate(_Flag, " set.", _Message)
THEN
DebugBreak(_Message);
GlobalSetFlag(_Flag);
//END_REGION

IF
DB_LLMIME_Debug_HostPlayer(_Player)
THEN
LeaveCombat(_Player);

IF
CharacterTeleportToFleeWaypoint(_Player, _)
AND
DB_CombatCharacters(_Player, _CombatID)
AND
DB_CombatCharacters(_Object, _CombatID)
AND
CharacterIsEnemy((CHARACTERGUID)_Object, _Player, 1)
THEN
LeaveCombat(_Object);

IF
CharacterTeleportToFleeWaypoint(_Player, _)
THEN
LeaveCombat(_Player);

//REGION FOLLOWER_GHOST_SPAWN
IF
GameStarted(_,_)
AND
DB_LLMIME_Follower_Mime(_Mime)
AND
CharacterIsDead(_Mime, 1)
AND
NOT ObjectGetFlag(_Mime, "Mimicry_MimeFollowerMaskTaken", 1)
AND
NOT LLMIME_Follower_QRY_GhostExists()
THEN
LeaderLib_StartObjectTimer(_Mime, 500, "Mimicry_Timers_Follower_SpawnGhost_", "Mimicry_Follower_SpawnGhost");

IF
CharacterSawCharacter(_Player, _Mime)
AND
DB_LLMIME_Follower_Mime(_Mime)
AND
CharacterIsDead(_Mime, 1)
AND
NOT ObjectGetFlag(_Mime, "Mimicry_MimeFollowerMaskTaken", 1)
AND
NOT LLMIME_Follower_QRY_GhostExists()
THEN
LeaderLib_StartObjectTimer(_Mime, 500, "Mimicry_Timers_Follower_SpawnGhost_", "Mimicry_Follower_SpawnGhost");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_Follower_SpawnGhost")
THEN
LLMIME_Follower_SpawnGhost(_Mime);
//END_REGION

//REGION SKILL_TEST
IF
CharacterStatusApplied(_Target, "LLMIME_DEBUG_SCRIPT", (CHARACTERGUID)_Source)
AND
GetPosition(_Target, _x, _y, _z)
THEN
//CharacterUseSkill(_Target, "Teleportation_LLMIME_FallTest", _Target, 0, 1, 1);
CharacterUseSkillAtPosition(_Target, "Teleportation_LLMIME_FallTest", _x, _y, _z, 0, 1);

IF
CharacterUsedItem(_, ITEMGUID_PUZ_Lever_Floor_A_000_daa4b4cf-9876-4a5b-9b78-021e4ccb1ade)
THEN
CharacterSetAnimationOverride(CHARACTERGUID_CrateTest_546c0ab3-683b-43cb-8b36-e86c67bf520d, "knockdown_fall");
ProcObjectTimer(CHARACTERGUID_CrateTest_546c0ab3-683b-43cb-8b36-e86c67bf520d, "LLMIME_Debug_StartLaunch", 250);
ProcObjectTimer(CHARACTERGUID_CrateTest_546c0ab3-683b-43cb-8b36-e86c67bf520d, "LLMIME_Debug_PlayKnockdownLoop", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLMIME_Debug_PlayKnockdownLoop")
THEN
CharacterSetAnimationOverride(_Char, "knockdown_loop");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLMIME_Debug_StartLaunch")
AND
GetPosition(ITEMGUID_S_LeaderLib_Platform_CrateTest_834a0782-4eb4-4e53-980e-47d2d0d00537, _x, _y, _z)
AND
Random(10, _Ran)
AND
IntegerMax(4, _Ran, _MultInt)
AND
Real(_MultInt, _MultR)
AND
RealProduct(1.0, _MultR, _AddY)
AND
RealProduct(_MultR, 1.60, _Speed)
THEN
LeaderLog_RealToString(_AddY, "[LLMIME:Debug:FakeGravityTest] Launching up. Height [","]");
ObjectSetFlag(ITEMGUID_S_LeaderLib_Platform_CrateTest_834a0782-4eb4-4e53-980e-47d2d0d00537, "LLMIME_Debug_FakeGravityTestActive");
LeaderLib_Platforms_Launch(_Character, "LLMIME_Debug_FakeGravityTest_DownDone", _AddY);

/*
IF
DB_LeaderLib_Platforms(_ID, _Platform)
THEN
SetStoryEvent(_Platform, "LeaderLib_Platform_MakeVisible");
*/

PROC
LeaderLib_Platforms_OnLaunchFinished((CHARACTERGUID)_Character, "LLMIME_Debug_FakeGravityTest_DownDone")
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:FakeGravityTest] Launching done.");
CharacterSetAnimationOverride(_Character, "");
PlayAnimation(_Character,"knockdown_getup");

PROC
LLMIME_Debug_ItemToTransform((ITEMGUID)_Item, (REAL)_X, (REAL)_Y, (REAL)_Z)
AND
GetRotation(_Item, (REAL)_PitchDegree, (REAL)_YawDegree, (REAL)_RollDegree)
AND
RealProduct(_PitchDegree, 0.0174533, (REAL)_Pitch)
AND
RealProduct(_YawDegree, 0.0174533, (REAL)_Yaw)
AND
RealProduct(_RollDegree, 0.0174533, (REAL)_Roll)
AND
ItemGetAmount(_Item, (INTEGER)_Amount)
AND
ItemGetOwner(_Item, (CHARACTERGUID)_Owner)
THEN
ItemToTransform(_Item, _X, _Y, _Z, _Pitch, _Yaw, _Roll, _Amount, _Owner);

/*
IF
CharacterMissedBy(_Mime, _AttackerOwner, _Attacker)
AND
HasActiveStatus(_Mime, "LLMIME_COUNTER_THROW", 1)
AND
NOT DB_GlobalFlag("WeaponExpansion_IsActive")
AND
LeaderLib_Roll_QRY(60)
THEN
CharacterUseSkill(_Mime, "Projectile_ThrowingKnife", _Attacker, 0, 1, 1);
*/
//END_REGION

//REGION PROJECTILE_TEST

/*
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_DebugTargetSkill", _, _)
AND
GetPosition(_Target, _tx, _ty, _tz)
AND
GetPosition(_Caster, _x, _y, _z)
AND
TemporaryCharacterCreateAtPosition(_x, _y, _z, "LLMIME_Dummy_Character_e2f3f6f7-c069-4928-830e-f1d46e2c898", 0, _Dummy)
THEN
Transform(_Dummy, "WPN_Tool_Scythe_2H_A_44525b09-a2b1-4b45-8d52-e893d04390dd", 0, 1, 0);
CharacterUseSkill(_Dummy, "Projectile_EnemyFlight", _Target, 1, 1, 1);
ProcObjectTimer(_Dummy, "LLMIME_Debug_RemoveDummy", 3000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Dummy, "LLMIME_Debug_RemoveDummy")
THEN
SetOnStage(_Dummy, 0);
CharacterDieImmediate(_Dummy, 0, "None", _Dummy);
*/
//END_REGION

//REGION PLATFORM_TEST
/*
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_DebugTargetSkill", _, _)
AND
GetPosition(_Target, _x, _y, _z)
AND
GetUUID(_Target, _UUID)
AND
LeaderLIb_Platforms_QRY_SpawnPlatform(_UUID, "Large", 0, _x, _y, _z)
AND
DB_LeaderLib_Platforms(_UUID, _Platform)
THEN
ApplyStatus(_Platform, "PERMANENT_NECROFIRE", -1.0, 1);
ProcObjectTimer(_Platform, "LLMIME_Debug_RemoveSpawnedPlatform", 3000);

PROC
ProcObjectTimerFinished((ITEMGUID)_Platform, "LLMIME_Debug_RemoveSpawnedPlatform")
THEN
LeaderLib_Platforms_RemovePlatform(_Platform);
*/

/*
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_DebugTargetSkill", _, _)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Target, "KNOCKED_DOWN")
AND
GetPosition(_Target, _x, _y, _z)
AND
RealSum(_y, 50.0, _ty)
AND
CreateItemTemplateAtPosition("S_LeaderLib_Platform_Large_81d0b457-3569-4c6b-bfbc-e954a768472a", _x, _y, _z, _Pillar)
THEN
DB_LLMIME_Debug_FlyPosition(_Caster, _Target, _Pillar, _x, _ty, _z);
CharacterSetAnimationOverride(_Target, "knockdown_loop");
LeaderLib_StartCharacterCharacterTimer(_Caster, _Target, 10, "LLMIME_Timers_Debug_FlyTimer_", "LLMIME_Debug_FlyTargetToPosition");

IF
CharacterCharacterEvent(_Caster, _Target, "LLMIME_Debug_FlyTargetToPosition")
AND
DB_LLMIME_Debug_FlyPosition(_Caster, _Target, _Pillar, _x, _ty, _z)
AND
GetPosition(_Target, _cx, _cy, _cz)
AND
_cy == _ty
THEN
NOT DB_LLMIME_Debug_FlyPosition(_Caster, _Target, _Pillar, _x, _ty, _z);
ItemRemove(_Pillar);

IF
CharacterCharacterEvent(_Caster, _Target, "LLMIME_Debug_FlyTargetToPosition")
AND
DB_LLMIME_Debug_FlyPosition(_Caster, _Target, _Pillar, _x, _ty, _z)
AND
GetPosition(_Target, _cx, _cy, _cz)
AND
_cy != _ty
AND
RealSum(_cy, 0.5, _ny)
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Debug:_FlyTargetToPosition] Flying target up to position via teleporting.");
TeleportToPosition(_Target, _x, _ny, _z, "LLMIME_Debug_KeepFlying", 0, 1);

IF
StoryEvent((CHARACTERGUID)_Target, "LLMIME_Debug_KeepFlying")
AND
DB_LLMIME_Debug_FlyPosition(_Caster, _Target, _Pillar, _x, _ty, _z)
THEN
LeaderLib_StartCharacterCharacterTimer(_Caster, _Target, 10, "LLMIME_Timers_Debug_FlyTimer_", "LLMIME_Debug_FlyTargetToPosition");
*/

/*
IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_DebugTargetSkill", _, _)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Target, "KNOCKED_DOWN")
AND
GetPosition(_Target, _x, _y, _z)
AND
RealSum(_z, 0.1, _tz)
AND
CreateItemTemplateAtPosition("S_LeaderLib_Platform_Large_81d0b457-3569-4c6b-bfbc-e954a768472a", _x, _y, _z, _Object)
THEN
//PlayAnimation(_Target, "knockdown_loop");
//CharacterSetAnimationOverride(_Target, "knockdown_loop");
//CharacterFlushQueue(_Target);
//ApplyStatus(_Object, "InstantKnockdown", -1.0, 1);
//ApplyStatus(_Object, "PERMANENT_NECROFIRE", -1.0, 1);
CharacterStatusText(_Caster, "Fly!");
DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z);
TeleportToPosition(_Target, _x, _y, _tz, "LLMIME_Debug_MoveToPillar", 0, 1);
//TeleportTo(_Target, _Caster, "LLMIME_Debug_MoveToPillar", 0, 1, 0);

IF
CharacterUsedSkillOnTarget(_Caster, (CHARACTERGUID)_Target, "Target_LLMIME_DebugTargetSkill", _, _)
AND
LeaderLib_Helper_QRY_HasStatus(_Target, "KNOCKED_DOWN")
THEN
RemoveStatus(_Target, "KNOCKED_DOWN");
CharacterSetAnimationOverride(_Target, "knockdown_loop");
LeaderLib_StartCharacterCharacterTimer(_Caster, _Target, 2450, "LLMIME_Timers_Debug_StartLaunchingDelay_", "LLMIME_Debug_LaunchTargetAfterDelay");

IF
CharacterCharacterEvent(_Caster, _Target, "LLMIME_Debug_LaunchTargetAfterDelay")
AND
GetPosition(_Target, _x, _y, _z)
AND
RealSum(_z, 0.1, _tz)
AND
CreateItemTemplateAtPosition("S_LeaderLib_Platform_Large_81d0b457-3569-4c6b-bfbc-e954a768472a", _x, _y, _z, _Object)
THEN
CharacterStatusText(_Caster, "Fly!");
DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z);
CharacterSetAnimationOverride(_Target, "knockdown_loop");
TeleportToPosition(_Target, _x, _y, _tz, "LLMIME_Debug_MoveToPillar", 0, 1);
CharacterSetAnimationOverride(_Target, "knockdown_loop");

IF
StoryEvent((CHARACTERGUID)_Target, "LLMIME_Debug_MoveToPillar")
AND
DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z)
AND
LeaderLib_Random_QRY(250,900)
AND
DB_LeaderLib_Random(_TimerDelay)
THEN
NOT DB_LeaderLib_Random(_TimerDelay);
CharacterSetAnimationOverride(_Target, "knockdown_loop");
CharacterMoveToPosition(_Target, _x, _y, _z, 1, "LLMIME_Debug_SetKnockdownLoop");
ProcObjectTimer(_Target, "LLMIME_Debug_FallDownPillar", _TimerDelay);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Target, "LLMIME_Debug_FallDownPillar")
AND
DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z)
AND
RealSum(_z, -0.1, _tz)
THEN
CharacterPurgeQueue(_Target);
CharacterLookAt(_Target, _Caster, 1);
ItemRemove(_Object);
CharacterSetAnimationOverride(_Target, "knockdown_loop");
CharacterMoveToPosition(_Target, _x, _y, _tz, 1, "LLMIME_Debug_SetKnockdownLoop");
CharacterSetAnimationOverride(_Target, "knockdown_loop");
ProcObjectTimer(_Target, "LLMIME_Debug_GetUp", 1000);

IF
StoryEvent((CHARACTERGUID)_Target, "LLMIME_Debug_SetKnockdownLoop")
THEN
CharacterSetAnimationOverride(_Target, "knockdown_loop");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Target, "LLMIME_Debug_GetUp")
AND
DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z)
THEN
//RemoveStatus(_Object, "InstantKnockdown");
CharacterSetAnimationOverride(_Target, "");
//PlayAnimation(_Target, "knockdown_getup", "");
ApplyStatus(_Target, "KNOCKED_DOWN", 6.0);
NOT DB_LLMIME_Debug_ObjectPosition(_Target, _Caster, _Object, _x, _y, _z);
*/
//END_REGION

//REGION TRACING
IF
CharacterLeveledUp(_Character)
AND
CharacterGetDisplayName(_Character, _, _Name)
AND
CharacterGetLevel(_Character, _Level)
AND
IntegertoString(_Level, _LevelStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterLeveledUp] Character [",_Name,"] leveled up to [",_LevelStr,"].");

IF
CharacterLeveledUp(_Owner)
AND
DB_LeaderLib_PartyFollower(_Owner, _Mime)
AND
CharacterGetDisplayName(_Owner, _, _Name)
AND
CharacterGetLevel(_Owner, _Level)
AND
IntegertoString(_Level, _LevelStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterLeveledUp] Owner [",_Name,"] leveled up to [",_LevelStr,"].");

IF
CharacterStartAttackPosition(_,_,_,_,_Character)
AND
CharacterGetEquippedWeapon(_Character, _Weapon)
AND
GetStatString(_Weapon, _StatName)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:WeaponStat] Character is using mainhand weapon with stat string [",_StatName,"].");

IF
CharacterStartAttackPosition(_,_,_,_,_Character)
AND
CharacterGetEquippedItem(_Character, "Shield", _Weapon)
AND
GetStatString(_Weapon, _StatName)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:WeaponStat] Character is using offhand weapon with stat string [",_StatName,"].");

IF
CharacterStartAttackObject(_Defender, _AttackOwner, _Attacker)
AND
HasLineOfSight(_Attacker, _AttackOwner, _HasSight)
AND
IntegertoString(_HasSight, _SightStr)
AND
GetTemplate(_Defender, _DefTemplate)
AND
CharacterGetDisplayName(_Attacker, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterStartAttackObject] Attacker [",_Name,"] has line of sight to [",_DefTemplate,"] == [",_SightStr,"].");

IF
AttackedByObject(_Target, _Owner, _Attacker, _DamageType, _DamageSource)
AND
GetTemplate(_Attacker, _AttackerID)
AND
GetTemplate(_Owner, _OwnerID)
AND
GetTemplate(_Target, _TargetID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:AttackedByObject] [",_AttackerID,"](",_OwnerID,") attacked [",_TargetID,"]. DamageType[",_DamageType,"] DamageSource[",_DamageSource,"].");

IF
CharacterReceivedDamage(_Target, _Percentage, _Attacker)
AND
GetTemplate(_Attacker, _AttackerID)
AND
GetTemplate(_Target, _TargetID)
AND
IntegertoString(_Percentage, _DamageStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:CharacterReceivedDamage] [",_AttackerID,"] did [",_DamageStr,"]% damage to [",_TargetID,"].");

IF
CharacterTeleported(_Player, _, _, _, _, _, _, _, _Skill)
AND
GetTemplate(_Player, _PlayerID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterTeleported] [",_PlayerID,"] teleported with skill [",_Skill,"].");

IF
CharacterTeleportToWaypoint(_Player, _Trigger)
AND
GetTemplate(_Player, _PlayerID)
AND
GetTemplate(_Trigger, _TriggerID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterTeleportToWaypoint] [",_PlayerID,"] teleported to waypoint [",_TriggerID,"].");

IF
CharacterTeleportToFleeWaypoint(_Player, _Trigger)
AND
GetTemplate(_Player, _PlayerID)
AND
GetTemplate(_Trigger, _TriggerID)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterTeleportToFleeWaypoint] [",_PlayerID,"] fled to waypoint [",_TriggerID,"].");

IF
DB_CustomUseItemResponse(_Char, _Item, _Result)
AND
CharacterGetDisplayName(_Char, _, _Name)
AND
GetTemplate(_Item, _ItemID)
AND
IntegertoString(_Result, _ResultStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:DB_CustomUseItemResponse] [",_Name,"] custom item response for [",_ItemID,"] is [",_ResultStr,"].");

PROC
ProcProcessUseOfItem((CHARACTERGUID)_Char, (ITEMGUID)_Item, (INTEGER)_Result)
AND
CharacterGetDisplayName(_Char, _, _Name)
AND
GetTemplate(_Item, _ItemID)
AND
IntegertoString(_Result, _ResultStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:ProcProcessUseOfItem] [",_Name,"] item [",_ItemID,"] process response is [",_ResultStr,"].");

IF
ObjectFlagSet("Mimicry_MimeIsUnarmed", (CHARACTERGUID)_Char, _)
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:Mimicry_MimeIsUnarmed] [",_Name,"] is unarmed.");

IF
ObjectFlagCleared("Mimicry_MimeIsUnarmed", (CHARACTERGUID)_Char, _)
AND
CharacterGetDisplayName(_Char, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:Mimicry_MimeIsUnarmed] [",_Name,"] is not unarmed.");

IF
CharacterStatusAttempt(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusApplied(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterStatusApplied] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusRemoved(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterStatusRemoved] Status [",_Status,"] removed from [",_Name,"] via [",_Cause,"].");
//END_REGION

//REGION SKILL_DEBUG
IF
CharacterUsedSkill(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedSkill] ", _LogDetails);

IF
CharacterUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [", _TargetID, "].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedSkillOnTarget] ", _LogDetails);

IF
CharacterUsedSkillAtPosition(_Caster, _XReal, _YReal, _ZReal, _Skill, _SkillType, _SkillElement)
AND
Integer(_XReal, _TargetX)
AND
Integer(_YReal, _TargetY)
AND
Integer(_ZReal, _TargetZ)
AND
GetPosition(_Caster, _XCastReal, _YCastReal, _ZCastReal)
AND
Integer(_XCastReal, _CastX)
AND
Integer(_YCastReal, _CastY)
AND
Integer(_ZCastReal, _CastZ)
AND
IntegertoString(_TargetX, _TargetXStr)
AND
IntegertoString(_TargetY, _TargetYStr)
AND
IntegertoString(_TargetZ, _TargetZStr)
AND
IntegertoString(_CastX, _CastXStr)
AND
IntegertoString(_CastY, _CastYStr)
AND
IntegertoString(_CastZ, _CastZStr)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
IsSourceSkill(_Skill, _IsSourceSkill)
AND
IntegertoString(_IsSourceSkill, _IsSourceSkillStr)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] Source[",_IsSourceSkillStr,"] from position [")
AND
DB_LeaderLog_Temp_CombinedString(_SkillPrefix)
AND
LeaderLog_QRY_ClearCombinedString(_SkillPrefix)
AND
LeaderLog_QRY_Log("COMBINE",_CastXStr,",",_CastYStr,",",_CastZStr,"] to target position [")
AND
DB_LeaderLog_Temp_CombinedString(_CasterPosition)
AND
LeaderLog_QRY_ClearCombinedString(_CasterPosition)
AND
LeaderLog_QRY_Log("COMBINE",_TargetXStr,",",_TargetYStr,",",_TargetZStr,"].")
AND
DB_LeaderLog_Temp_CombinedString(_TargetPosition)
AND
LeaderLog_QRY_ClearCombinedString(_TargetPosition)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedSkillAtPosition] ", _SkillPrefix, _CasterPosition, _TargetPosition);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, (CHARACTERGUID)_Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
CharacterGetDisplayName(_Target, _, _TargetName)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
IsSourceSkill(_Skill, _IsSourceSkill)
AND
IntegertoString(_IsSourceSkill, _IsSourceSkillStr)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] Source[",_IsSourceSkillStr,"] on target [",_TargetName,"](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, (ITEMGUID)_Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
IsSourceSkill(_Skill, _IsSourceSkill)
AND
IntegertoString(_IsSourceSkill, _IsSourceSkillStr)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] Source[",_IsSourceSkillStr,"] on target [Item](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLMIME:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
SkillCast(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")]")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLMIME:Debug:SkillCast] ", _LogDetails);
//END_REGION

//REGION FLAG_TRACING
IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Mime, _)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
//LeaderLog_SetOneshotTarget(_Mime);
//LeaderLog_Log("STATUS", "[<font color='#00FA9A'>", _Flag, "</font>] Set");
LeaderLog_Log("DEBUG", "Flag [", _Flag, "] was set on [",_Name,"].");

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Mime, _)
AND
CharacterGetDisplayName(_Mime, _, _Name)
THEN
//LeaderLog_SetOneshotTarget(_Mime);
//LeaderLog_Log("STATUS", "[<font color='#FF0000'>", _Flag, "</font>] Cleared");
LeaderLog_Log("DEBUG", "Flag [", _Flag, "] was cleared on [",_Name,"].");
//END_REGION

//REGION ATTACK_DEBUG
IF
AttackedByObject(_Target, _Owner, (CHARACTERGUID)_Mime, _DamageType, _DamageSource)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:AttackedByObject] Mime attacked something. DamageType[",_DamageType,"] DamageSource[",_DamageSource,"].");

IF
CharacterReceivedDamage(_Target, _Percentage, (CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
AND
IntegertoString(_Percentage, _DamageStr)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mime:CharacterReceivedDamage] Mime did [",_DamageStr,"]% damage. Whatever that means.");
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLMIME_08_0_DebugLevel"
