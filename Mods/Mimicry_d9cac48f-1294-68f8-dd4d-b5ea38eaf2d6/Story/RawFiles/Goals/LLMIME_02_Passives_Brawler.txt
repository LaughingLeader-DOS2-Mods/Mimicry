Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Brawler_InitSettings();
/*Settings*/
//DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
//DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
//DB_LLMIME_Brawler_FistDeltaMods(_MinLevel, _DeltaMod)
/*Temp*/
//DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime, _FXHandle)
//DB_LLMIME_Brawler_JustToggledStance(_Mime)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Brawler_InitSettings()
THEN
SysClear("DB_LLMIME_Brawler_StanceStatuses", 5);
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", "Mimicry_BrawlerStance_UseCon", "LLMIME_BRAWLER_STANCE_CON_INFO", "Mimicry_HideBrawlerStance", "LLMIME_Settings_BrawlerStance_Con_1f4bd5ba-4cf3-4262-af49-455e2530c986");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON_FOLLOWER", "Mimicry_IsMimeFollower", "LLMIME_BRAWLER_STANCE_CON_INFO", "Mimicry_HideBrawlerStance", "LLMIME_Settings_BrawlerStance_Con_1f4bd5ba-4cf3-4262-af49-455e2530c986");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_STR", "Mimicry_BrawlerStance_UseStr", "LLMIME_BRAWLER_STANCE_STR_INFO", "Mimicry_HideBrawlerStance", "LLMIME_Settings_BrawlerStance_Str_694fa103-1089-492b-a7db-aef0e5cf0efd");
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_FIN", "Mimicry_BrawlerStance_UseFin", "LLMIME_BRAWLER_STANCE_FIN_INFO", "Mimicry_HideBrawlerStance", "LLMIME_Settings_BrawlerStance_Fin_c2f6f50c-8e29-4fdc-8391-f8a4e823f658");

SysClear("DB_LLMIME_Brawler_StanceStatuses", 3);
//These need to be hard-coded strings rather than translates strings, since the engine doesn't seem to translate a string passed from a variable
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseCon", "*Prefer a body-based Brawler Stance (Scales with Constitution).* (Default)");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseStr", "*Prefer a strength-based Brawler Stance (Scales with Strength).*");
DB_LLMIME_Brawler_SettingsString("Mimicry_BrawlerStance_UseFin", "*Prefer a finesse-based Brawler Stance (Scales with Finesse).*");

/* Deprecated in favor of the brawler fist applying an "OnHit" status
SysClear("DB_LLMIME_Brawler_UnarmedSkills", 1);
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_EyeGouge");
DB_LLMIME_Brawler_UnarmedMimeSkills("Shout_LLMIME_QuakeSlam");
DB_LLMIME_Brawler_UnarmedMimeSkills("MultiStrike_LLMIME_MimeVault");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_KneeBreaker");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_DisarmingBlow");
DB_LLMIME_Brawler_UnarmedMimeSkills("Target_LLMIME_Fatality");
//Vanilla skills
SysClear("DB_LLMIME_Brawler_UnarmedDOS2Skills", 1);
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_LLMIME_DoubleStrike"); // Technically a mime skill, but it has no follower version.
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_CripplingBlow");
//DB_LLMIME_Brawler_UnarmedSkills("Cone_GroundSmash");
DB_LLMIME_Brawler_UnarmedDOS2Skills("MultiStrike_BlinkStrike");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Shout_Whirlwind");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_Overpower");
DB_LLMIME_Brawler_UnarmedDOS2Skills("Target_Flurry");
*/
//END_REGION

//REGION UPDATING
//Disabled for now
QRY
LLMIME_Brawler_Internal_QRY_VersionNeedsUpdating((STRING)_Version)
AND
_Version == "-1"
THEN
DB_NOOP(1);

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LLMIME_Brawler_Internal_QRY_VersionNeedsUpdating(_PastVersion)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Brawler] Updating settings from version [",_PastVersion,"]");
LLMIME_Brawler_InitSettings();

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, "0.9.9.3")
AND
DB_LLMIME_Follower_Mime(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
RemoveStatus(_Mime, _Status);

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, "0.9.9.3")
AND
DB_LLMIME_Follower_Mime(_Mime)
THEN
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION SETTINGS_DIALOG_VARS
IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
THEN
LLMIME_Settings_SetDialogVariables(_Mime, _Instance);

IF
ObjectFlagSet(_SettingsFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Settings_SetDialogVariables((CHARACTERGUID)_Mime, (INTEGER)_Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
DB_LLMIME_Brawler_SettingsString(_SettingsFlag, _Str)
AND
ObjectGetFlag(_Mime, _SettingsFlag, _FlagVal)
THEN
LLMIME_Brawler_Internal_SetStanceString(_Instance, _DialogVar, _Str, _FlagVal);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 0
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _Str);

PROC
LLMIME_Brawler_Internal_SetStanceString((INTEGER)_Instance, (STRING)_DialogVar, (STRING)_Str, (INTEGER)_FlagVal)
AND
_FlagVal == 1
AND
StringConcatenate(_Str, " *Active*", _FinalStr)
THEN
DialogSetVariableStringForInstance(_Instance, _DialogVar, _FinalStr);
//END_REGION

//REGION CLEAR_DATA
PROC
LLMIME_Brawler_ClearMimeData((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
//END_REGION

//REGION BRAWLER_STANCE_PREFERENCE_SET
PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectClearFlag(_Mime, _SettingsFlag);

PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
NOT ObjectGetFlag(_Mime, _Flag, 1)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
THEN
ObjectSetFlag(_Mime, _Flag);
LLMIME_Brawler_RemoveStance(_Mime);
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Brawler_SetStancePreference((CHARACTERGUID)_Mime, (STRING)_Flag)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 1)
THEN
ObjectSetFlag(_Mime, "Mimicry_IsMimeFollower");
LLMIME_Brawler_RemoveStance(_Mime);
LLMIME_Brawler_ApplyStance(_Mime);

QRY
LLMIME_Brawler_QRY_StancePreferenceSet((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
THEN
DB_NOOP(1);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER", _)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
NOT LLMIME_Brawler_QRY_StancePreferenceSet(_Mime)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
AND
DB_LLMIME_Brawler_StanceStatuses("LLMIME_BRAWLER_STANCE_CON", _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
ObjectSetFlag(_Mime, _SettingsFlag); // Default
//END_REGION

//REGION BRAWLER_STANCE_TOGGLE
IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceActivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Start");

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
NOT LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceActivated_Cast");
LLMIME_Brawler_ApplyStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime)
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Cast");
LLMIME_Brawler_RemoveStance(_Mime);
DB_LLMIME_Brawler_JustToggledStance(_Mime);

IF
CharacterUsedSkill(_Mime, "Shout_LLMIME_BrawlerStance", _, _)
AND
DB_LLMIME_Brawler_JustToggledStance(_Mime)
THEN
NOT DB_LLMIME_Brawler_JustToggledStance(_Mime);

//Should fire after being Resurrected, or putting the mask back on.
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimeInitialized")
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
LLMIME_Brawler_ApplyStance(_Mime);

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ApplyBrawlerStance")
THEN
LLMIME_Brawler_ApplyStance(_Mime);

PROC
LLMIME_Brawler_ApplyStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, _SettingsFlag, 1)
AND
HasActiveStatus(_Mime, _Status, 0)
THEN
ApplyStatus(_Mime, _Status, -1.0, 1, _Mime);
ObjectSetFlag(_Mime, "Mimicry_BrawlerStatusActive");

IF
CharacterStatusApplied(_Mime, "LLMIME_BRAWLER_BONUS", _)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION BRAWLER_STANCE_REMOVAL
/*
IF
ItemTemplateUnEquipped("WPN_LLMIME_BrawlerFist_e1bda904-93c2-4f6f-8136-1a547279fd1f", _Mime)
AND
GetItemForItemTemplateInInventory(_Mime, "WPN_LLMIME_BrawlerFist_e1bda904-93c2-4f6f-8136-1a547279fd1f", _Item)
THEN
ItemRemove(_Item);
LLMIME_Brawler_RemoveStance(_Mime);
*/
/*
IF
ItemUnEquipped(_Item, _Mime)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
THEN
ItemRemove(_Item);
LLMIME_Brawler_RemoveStance(_Mime);

IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLMIME_BrawlerFist", 1)
THEN
ItemRemove(_Item);
*/

IF
CharacterStatusRemoved(_Mime, "LLMIME_BRAWLER", _)
THEN
LLMIME_Brawler_RemoveStance(_Mime);

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
RemoveStatus(_Mime, _Status);
SetStoryEvent(_Mime, "Mimicry_Events_BrawlerStanceDeactivated_Status");

PROC
LLMIME_Brawler_RemoveStance((CHARACTERGUID)_Mime)
AND
CharacterIsDead(_Mime, 0)
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStatusActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStatusActive");
//END_REGION

//REGION UNARMED_BONUS_DAMAGE
IF
CharacterStatusApplied(_Target, "LLMIME_UNARMED_HIT", (CHARACTERGUID)_Mime)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Brawler:OnMimeUnarmedBasicAttack] Mime hit character target with an unarmed attack.");
LLMIME_Brawler_OnUnarmedAttack(_Mime, _Target);

IF
ItemStatusChange(_Target, "LLMIME_UNARMED_HIT", (CHARACTERGUID)_Mime)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
AND
ItemIsStoryItem(_Target, 0)
THEN
LeaderLog_Log("DEBUG", "[Mimicry:Brawler:OnMimeUnarmedBasicAttack] Mime hit item target with an unarmed attack.");
LLMIME_Brawler_OnUnarmedAttack(_Mime, _Target);

PROC
LLMIME_Brawler_OnUnarmedAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
LLMIME_Brawler_QRY_BrawlerActive(_Mime)
THEN
LeaderLog_Log("TRACE", "[Mimicry:Brawler:OnUnarmedAttack] Incrementing unarmed attack combo.");
LLMIME_Brawler_IncrementHits(_Mime, _Target);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _)
THEN
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, 0);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
AND
IntegerSum(_TotalHits, 1, _NextTotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _NextTotalHits);

PROC
LLMIME_Brawler_IncrementHits((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits)
AND
_TotalHits >= 3
AND
ObjectIsCharacter(_Target, _IsCharacter)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
LeaderLog_Log("TRACE", "[Mimicry:Brawler:IncrementHits] Applying unarmed bonus damage.");
LLMIME_Brawler_Internal_ApplyUnarmedBonusDamage_Start(_Mime, _Target, _IsCharacter);

PROC
LLMIME_Brawler_Internal_ApplyUnarmedBonusDamage_Start((CHARACTERGUID)_Mime, (GUIDSTRING)_Target, (INTEGER)_IsCharacter)
AND
ObjectExists(_Target, 1)
AND
ObjectExists(_Mime, 1)
AND
CharacterIsDead(_Mime, 0)
THEN
LLMIME_Brawler_ApplyUnarmedBonusDamage(_Mime, _Target, _IsCharacter);

PROC
LLMIME_Brawler_ApplyUnarmedBonusDamage((CHARACTERGUID)_Mime, (GUIDSTRING)_Target, 1)
AND
CharacterIsDead((CHARACTERGUID)_Target, 0)
THEN
CharacterCharacterSetEvent(_Mime, _Target, "Mimicry_ApplyUnarmedBonusDamage");

PROC
LLMIME_Brawler_ApplyUnarmedBonusDamage((CHARACTERGUID)_Mime, (GUIDSTRING)_Target, 0)
AND
ItemIsDestroyed((ITEMGUID)_Target, 0)
THEN
CharacterItemSetEvent(_Mime, _Target, "Mimicry_ApplyUnarmedBonusDamage");

IF
CharacterDied(_Mime)
AND
IsTagged(_Mime, "Mimicry_Mime", 1)
THEN
LLMIME_Brawler_ClearMimeData(_Mime);

IF
CharacterDied(_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, (GUIDSTRING)_Target, _TotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
LLMIME_Brawler_ClearMimeData(_Mime);

IF
ItemDestroyed(_Target)
AND
DB_LLMIME_Brawler_TotalHits(_Mime, (GUIDSTRING)_Target, _TotalHits)
THEN
NOT DB_LLMIME_Brawler_TotalHits(_Mime, _Target, _TotalHits);
LLMIME_Brawler_ClearMimeData(_Mime);
//END_REGION

//REGION UNARMED_BONUS_DAMAGE_DEBUFFS
IF
CharacterStatusApplied(_Target, "LLMIME_UNARMED_BONUS_DAMAGE", (CHARACTERGUID)_Mime)
THEN
SetStoryEvent(_Target, "Mimicry_Events_HitByUnarmedBonusDamage");

/*
IF
CharacterStatusApplied(_Target, "LLMIME_UNARMED_BONUS_DAMAGE", (CHARACTERGUID)_Mime)
AND
LeaderLib_Random_QRY(0, 999)
AND
DB_LeaderLib_Random(_Ran)
THEN
LLMIME_Brawler_ApplyBonusDamageDebuffs(_Target, _Mime, _Ran);

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (CHARACTERGUID)_Mime, (INTEGER)_Roll)
AND
CharacterIsDead(_Target, 0)
AND
HasActiveStatus(_Target, "BLIND", 0)
AND
_Roll <= 150
AND
_Roll > 100
THEN
ApplyStatus(_Target, "LLMIME_BLIND_ARMOR_BYPASS", 6.0, 0, _Mime);

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (CHARACTERGUID)_Mime, (INTEGER)_Roll)
AND
CharacterIsDead(_Target, 0)
AND
HasActiveStatus(_Target, "SLOWED", 0)
AND
_Roll <= 100
AND
_Roll > 50
THEN
ApplyStatus(_Target, "LLMIME_SLOWED_ARMOR_BYPASS", 6.0, 0, _Mime);

PROC
LLMIME_Brawler_ApplyBonusDamageDebuffs((CHARACTERGUID)_Target, (CHARACTERGUID)_Mime, (INTEGER)_Roll)
AND
CharacterIsDead(_Target, 0)
AND
HasActiveStatus(_Target, "WEAK", 0)
AND
_Roll <= 50
THEN
ApplyStatus(_Target, "LLMIME_WEAK_ARMOR_BYPASS", 6.0, 0, _Mime);
*/
//END_REGION

//REGION DOUBLE_STRIKE
IF
CharacterCharacterEvent(_Mime, _Target, "Mimicry_Events_OnCriticalHit")
AND
CharacterIsDead(_Mime, 0)
AND
CharacterIsDead(_Target, 0)
AND
LeaderLib_Roll_QRY(40)
THEN
LLMIME_Brawler_StartDoubleAttack(_Mime, _Target);

IF
CharacterItemEvent(_Mime, _Target, "Mimicry_Events_OnCriticalHit")
AND
CharacterIsDead(_Mime, 0)
AND
ItemIsDestroyed(_Target, 0)
AND
LeaderLib_Roll_QRY(40)
THEN
LLMIME_Brawler_StartDoubleAttack(_Mime, _Target);

PROC
LLMIME_Brawler_StartDoubleAttack((CHARACTERGUID)_Mime, (GUIDSTRING)_Target)
AND
NOT DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, (CHARACTERGUID)_)
AND
NOT DB_LeaderLib_Skills_Temp_SkillDummyData(_, _Mime, _Target, "Target_LLMIME_DoubleStrike_DummyVisual")
AND
GetPosition(_Mime, _x, _y, _z)
THEN
LeaderLib_Skills_UseSkillOnTargetFromPosition(_Mime, _Target, "Target_LLMIME_DoubleStrike_DummyVisual", _x, _y, _z, 0, 1);
LLMIME_Brawler_IncrementDoubleStrikes(_Mime);
ProcObjectTimerCancel(_Mime, "Mimicry_Timers_DisplayDoubleStrikeText");
ProcObjectTimer(_Mime, "Mimicry_Timers_DisplayDoubleStrikeText", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Mime, "Mimicry_Timers_DisplayDoubleStrikeText")
AND
DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total)
AND
_Total > 1
AND
IntegertoString(_Total, _TotalStr)
AND
StringConcatenate("<font color='#8A2BE2' size='24'>Double Strike x", _TotalStr, _Str1)
AND
StringConcatenate(_Str1, "!</font>", _StatusText)
THEN
CharacterStatusText(_Mime, _StatusText);
NOT DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Mime, "Mimicry_Timers_DisplayDoubleStrikeText")
AND
DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total)
AND
_Total <= 1
THEN
CharacterStatusText(_Mime, "LLMIME_StatusText_DoubleStrike");
NOT DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total);

PROC
LLMIME_Brawler_IncrementDoubleStrikes((CHARACTERGUID)_Mime)
AND
NOT DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _)
THEN
DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, 0);

PROC
LLMIME_Brawler_IncrementDoubleStrikes((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total)
AND
IntegerSum(_Total, 1, _NextTotal)
THEN
NOT DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _Total);
DB_LLMIME_Brawler_TotalDoubleStrikes(_Mime, _NextTotal);

IF
StoryEvent((CHARACTERGUID)_Dummy, "LeaderLib_Events_SkillDummyTeleported")
AND
DB_LeaderLib_Skills_Temp_SkillDummyData(_Dummy, _Mime, _Target, "Target_LLMIME_DoubleStrike_DummyVisual")
AND
NOT DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, _Dummy)
THEN
DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, _Dummy);

IF
StoryEvent((CHARACTERGUID)_Dummy, "LeaderLib_Events_SkillDummyArrived")
AND
DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, _Dummy)
THEN
SetVisible(_Dummy, 1);
CharacterSetDetached(_Dummy, 0);

IF
CharacterStatusAttempt(_Target, "LLMIME_DOUBLE_STRIKE_CAST", (CHARACTERGUID)_Dummy)
AND
DB_LLMIME_Brawler_DoubleStrikeData(_Mime, (GUIDSTRING)_Target, _Dummy)
THEN
NOT DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, _Dummy);
CharacterCharacterSetEvent(_Mime, (CHARACTERGUID)_Target, "Mimicry_ApplyDoubleStrike");
LeaderLib_Skills_ResetDummy(_Dummy);

IF
ItemStatusAttempt(_Target, "LLMIME_DOUBLE_STRIKE_CAST", (CHARACTERGUID)_Dummy)
AND
DB_LLMIME_Brawler_DoubleStrikeData(_Mime, (GUIDSTRING)_Target, _Dummy)
THEN
NOT DB_LLMIME_Brawler_DoubleStrikeData(_Mime, _Target, _Dummy);
CharacterItemSetEvent(_Mime, (ITEMGUID)_Target, "Mimicry_ApplyDoubleStrike");
LeaderLib_Skills_ResetDummy(_Dummy);

//Prevent double strikes from double strike crits
IF
CharacterStatusApplied(_Target, "LLMIME_DOUBLE_STRIKE", _)
AND
CharacterIsInCombat(_Target, 1)
THEN
ProcObjectTimer(_Target, "Mimicry_Timers_ResetDoubleStrikeBlocking", 500);

IF
ItemStatusChange(_Target, "LLMIME_DOUBLE_STRIKE", _)
AND
DB_CombatObjects(_Target, _CombatID)
THEN
ProcObjectTimer(_Target, "Mimicry_Timers_ResetDoubleStrikeBlocking", 500);

PROC
ProcObjectTimerFinished(_Target, "Mimicry_Timers_ResetDoubleStrikeBlocking")
THEN
RemoveStatus(_Target, "LLMIME_DOUBLE_STRIKE");
//END_REGION

//REGION WEAPON_MIMICKING_STANCE_SAVING
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_WeaponMimickingStarted")
AND
LLMIME_Brawler_QRY_StanceIsActive(_Mime)
THEN
ObjectSetFlag(_Mime, "Mimicry_BrawlerStanceWasActive");

IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_MimickedWeaponsRemoved")
AND
ObjectGetFlag(_Mime, "Mimicry_BrawlerStanceWasActive", 1)
THEN
ObjectClearFlag(_Mime, "Mimicry_BrawlerStanceWasActive");
LLMIME_Brawler_ApplyStance(_Mime);
//END_REGION

//REGION INFOSTATUSES
IF
CharacterStatusRemoved(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 0)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
CharacterStatusApplied(_Mime, _Status, _)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
NOT ObjectGetFlag(_Mime, _DisableInfoFlag, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1, _Mime);

IF
ObjectFlagSet(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
THEN
RemoveStatus(_Mime, _InfoStatus);

IF
ObjectFlagCleared(_DisableInfoFlag, (CHARACTERGUID)_Mime, _Instance)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
AND
HasActiveStatus(_Mime, _InfoStatus, 0)
THEN
ApplyStatus(_Mime, _InfoStatus, -1.0, 1, _Mime);
//END_REGION

//REGION QUERIES
QRY
LLMIME_Brawler_QRY_StanceIsActive((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Brawler_StanceStatuses(_Status, _SettingsFlag, _InfoStatus, _DisableInfoFlag, _DialogVar)
AND
HasActiveStatus(_Mime, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_DamageTypeMatches((CHARACTERGUID)_Mime, (STRING)_DamageType)
THEN
DB_NOOP(1);

QRY
LLMIME_Brawler_QRY_BrawlerActive((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_BRAWLER_BONUS", 1)
AND
ObjectGetFlag(_Mime, "Mimicry_MimeIsUnarmed", 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION RESET
/*
IF
StoryEvent((CHARACTERGUID)_Mime, "Mimicry_ResetMimeCombatData")
AND
DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime)
THEN
NOT DB_LLMIME_Brawler_DoubleAttackTimer(_TimerName, _Mime);
TimerCancel(_TimerName);
ObjectClearFlag(_Mime, "Mimicry_DoubleAttackDisabled");
*/
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
