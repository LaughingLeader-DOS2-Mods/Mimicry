Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLMIME_Mimicking_InitSettings();

//DB_LLMIME_Mimicking_Blacklist_SkillTypes(_SkillType, _GlobalFlag, _EnabledState)
//DB_LLMIME_Mimicking_Blacklist_SkillElements(_SkillType, _SkillElement)
//DB_LLMIME_Mimicking_Blacklist_Skills(_Group, _Skill)
//DB_LLMIME_Mimicking_Blacklist_SkillPrefixes(_Group, _Prefix)
KBSECTION
//REGION SETTINGS
PROC
LLMIME_Mimicking_Internal_ClearAllSettings()
THEN
SysClear("DB_LLMIME_Mimicking_Blacklist_SkillTypes", 3);
SysClear("DB_LLMIME_Mimicking_Blacklist_SkillElements", 2);
SysClear("DB_LLMIME_Mimicking_Blacklist_Skills", 2);
SysClear("DB_LLMIME_Mimicking_Blacklist_SkillPrefixes", 2);
SysClear("DB_LLMIME_Mimicking_Whitelist_Skills", 2);
SysClear("DB_LLMIME_Mimicking_Whitelist_ItemTags", 1);
SysClear("DB_LLMIME_Mimicking_Blacklist_ItemTemplates", 1);
SysClear("DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes", 1);
SysClear("DB_LLMIME_Mimicking_Whitelist_WeaponCopy_Skills", 1);
SysClear("DB_LLMIME_Mimicking_Blacklist_WeaponCopy_IgnoreSkillsWith", 1);
SysClear("DB_LLMIME_Mimicking_HarmfulHealingSkills", 1);

PROC
LLMIME_Mimicking_Internal_ClearMimicryBlacklist()
AND
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", _Skill)
THEN
NOT DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", _Skill);

PROC
LLMIME_Mimicking_Internal_ClearMimicryBlacklist()
AND
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", _Prefix)
THEN
NOT DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", _Prefix);

PROC
LLMIME_Mimicking_Internal_ClearMimicryBlacklist()
AND
DB_LLMIME_Mimicking_Whitelist_Skills("Mimicry", _Skill)
THEN
NOT DB_LLMIME_Mimicking_Whitelist_Skills("Mimicry", _Skill);

PROC
LLMIME_Mimicking_InitSettings()
THEN
//Most teleportation spells require 2 targets, and we can only specify one with scripting, so use a target version instead.
DB_LLMIME_Mimicking_SkillSwap("Teleportation_ResurrectScroll", "Target_LLMIME_ResurrectScroll", "target", "Death");
DB_LLMIME_Mimicking_SkillSwap("Teleportation_StoryModeFreeResurrect", "Target_LLMIME_ResurrectScroll", "target", "Death");

//Path skills aren't implemented.
//DB_LLMIME_Mimicking_Blacklist_SkillTypes("path", "Mimicry_Mimic_SkillType_Path_Enabled", 1);
DB_LLMIME_Mimicking_Blacklist_SkillTypes("summon", "Mimicry_Mimic_SkillType_Summons_Enabled", 1);
//New: Blacklisting Rush & Jump skills, mainly because they have a habit of moving mimes through walls or up to strange areas of the map
DB_LLMIME_Mimicking_Blacklist_SkillTypes("rush", "", 0);
DB_LLMIME_Mimicking_Blacklist_SkillTypes("jump", "", 0);
/*
Teleportation requires 2 targets for most spells, which is impossible with story scripting.
Character scripts can specify 2 targets, but that would require overriding Base.charScript or similar.
*/
DB_LLMIME_Mimicking_Blacklist_SkillTypes("teleportation", "", 0);

//Special type shout skills, typically used for toggle abilities in mods
DB_LLMIME_Mimicking_Blacklist_SkillElements("shout", "");
//Special Mime Skills
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_LLMIME_SetFacingDirection");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_LLMIME_ApplyFacingDirection");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_LLMIME_MimicAttack");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_LLMIME_MimicAttack_Ally");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Projectile_LLMIME_MimicBowAttack");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Projectile_LLMIME_MimicCrossbowAttack");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Projectile_LLMIME_MimicWandAttack");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Projectile_LLMIME_MimicDualWandAttack");

DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_LLMIME_ReturnToOwner");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_LLMIME_BrawlerStance");
//Specific Source Skills
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_Challenge");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Projectile_LLMIME_FinalWish");
//DOS2 Skills
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_PlayDead");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_FavourableWind");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_ElementalArrowheads");
//Adrenaline reduces the Mime's AP by the time their turn swings around
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_Adrenaline");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_EnemyAdrenaline");
//Summon Skills
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_BloatedCorpse");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Shout_NecromancerTotems");
//Summon Infusions
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_ElectricInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_IceInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_FireInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_WarpInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_ShadowInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_PowerInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_RangedInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_PoisonInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_NecrofireInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_WaterInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_AcidInfusion");
DB_LLMIME_Mimicking_Blacklist_Skills("Mimicry", "Target_CursedElectricInfusion");
//DOS2 Prefixes
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", "_Quest_");
//Prefixes (i.e. mod skills)
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", "_LLCIVIL_");
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", "_LLEQSET_");

DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", "_PolymorphInto_");
//Special skills
DB_LLMIME_Mimicking_Whitelist_Skills("Mimicry", "Shout_RecoverArmour");
DB_LLMIME_Mimicking_Whitelist_Skills("Mimicry", "Shout_EnemyOverthrow");

DB_LLMIME_Mimicking_Whitelist_ItemTags("Potion");
DB_LLMIME_Mimicking_Whitelist_ItemTags("POTIONS");
DB_LLMIME_Mimicking_Whitelist_ItemTags("DRINK");
DB_LLMIME_Mimicking_Whitelist_ItemTags("FOOD");

//DB_LLMIME_Mimicking_Blacklist_ItemTags("");
DB_LLMIME_Mimicking_Blacklist_ItemTemplates("CON_Potion_BloodRose_8c89072f-820b-46cb-83af-757b3d469c93");
DB_LLMIME_Mimicking_Blacklist_ItemTemplates("CON_Potion_Source_A_23cdecb1-06a4-4290-bb2c-de300cba5dd0");
DB_LLMIME_Mimicking_Blacklist_ItemTemplates("LOOT_Source_Orb_106a7107-cf36-4331-b5b5-6de71969f370");

//Skill types with the "UseWeaponDamage" property.
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Target_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Shout_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Projectile_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("ProjectileStrike_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Cone_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Zone_");
//DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("MultiStrike_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Rush_");
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes("Rain_");

DB_LLMIME_Mimicking_Whitelist_WeaponCopy_Skills("Shout_RecoverArmour");

DB_LLMIME_Mimicking_Blacklist_WeaponCopy_IgnoreSkillsWith("_Grenade_");

DB_LLMIME_Mimicking_HarmfulHealingSkills("Target_FirstAid");
DB_LLMIME_Mimicking_HarmfulHealingSkills("Target_Restoration");

//Other Mods
//Odinblade's Umbra
DB_LLMIME_Mimicking_Blacklist_Skills("Umbra", "Shout_SHADEShadowstep");
//END_REGION

//REGION UPDATING
/* 
PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
DB_LeaderLib_StringExt_VersionIsLessThan(_PastVersion, 0, 9, 9, 33)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimicking:System] Updating settings from version [",_PastVersion,"]");
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes("Mimicry", "_PolymorphInto_");

PROC
LeaderUpdater_ModUpdated("Mimicry", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
DB_LeaderLib_StringExt_VersionIsLessThan(_PastVersion, 0, 9, 9, 4)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimicking:System] Updating settings from version [",_PastVersion,"]");
SysClear("DB_LLMIME_Mimicking_Blacklist_Skills", 1);
SysClear("DB_LLMIME_Mimicking_Blacklist_SkillPrefixes", 1);
SysClear("DB_LLMIME_Mimicking_Whitelist_Skills", 1);
LLMIME_Mimicking_InitSettings();
*/
//END_REGION

//REGION COPY_ATTRIBUTES
PROC
LLMIME_Mimicking_CopyAttributes((CHARACTERGUID)_Mime, (CHARACTERGUID)_Caster)
AND
DB_LeaderLib_Attributes(_Attribute)
AND
CharacterGetAttribute(_Caster, _Attribute, _Val)
AND
CharacterGetAttribute(_Mime, _Attribute, _CurrentVal)
AND
IntegerSubtract(_Val, _CurrentVal, _AddVal)
AND
_AddVal > 0
THEN
CharacterAddAttribute(_Mime, _Attribute, _AddVal);
DB_LLMIME_Mimicking_MimickedAttribute(_Mime, _Attribute, _AddVal);

PROC
LLMIME_Mimicking_ClearCopiedAttributes((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Mimicking_MimickedAttribute(_Mime, _Attribute, _AddVal)
THEN
CharacterRemoveAttribute(_Mime, _Attribute, _AddVal);
NOT DB_LLMIME_Mimicking_MimickedAttribute(_Mime, _Attribute, _AddVal);
//END_REGION

//REGION BLACKLIST_CHECK_ITEMS
QRY
LLMIME_Mimicking_QRY_ItemIsAllowed((ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
NOT DB_LLMIME_Mimicking_Blacklist_ItemTemplates(_Template)
AND
DB_LLMIME_Mimicking_Whitelist_ItemTags(_Tag)
AND
IsTagged(_Item, _Tag, 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION BLACKLIST_CHECK_SKILLS
QRY
LLMIME_Mimicking_QRY_BlacklistFlagEnabled((STRING)_GlobalFlag, (INTEGER)_EnabledState)
AND
_GlobalFlag != ""
AND
GlobalGetFlag(_GlobalFlag, _EnabledState)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_Internal_BlockedSkillTypeIsEnabled((STRING)_SkillType)
AND
DB_LLMIME_Mimicking_Blacklist_SkillTypes(_SkillType, _GlobalFlag, _EnabledState)
AND
LLMIME_Mimicking_QRY_BlacklistFlagEnabled(_GlobalFlag, _EnabledState)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_Internal_BlockedSkillTypeIsEnabled((STRING)_SkillType)
AND
NOT DB_LLMIME_Mimicking_Blacklist_SkillTypes(_SkillType, _, _)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_Internal_SkillNameMatchesBlocked((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Blacklist_SkillPrefixes(_Group, _Prefix)
AND
StringContains(_Skill, _Prefix, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicSourceSkill((STRING)_Skill, (CHARACTERGUID)_Mime)
AND
IsSourceSkill(_Skill, 0)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicSourceSkill((STRING)_Skill, (CHARACTERGUID)_Mime)
AND
IsSourceSkill(_Skill, 1)
AND
GlobalGetFlag("Mimicry_Mimic_CopySourceSkills_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicSourceSkill((STRING)_Skill, (CHARACTERGUID)_Mime)
AND
IsSourceSkill(_Skill, 1)
AND
NOT GlobalGetFlag("Mimicry_Mimic_CopySourceSkills_Enabled", 1)
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_SOURCE", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_SkillIsAllowed((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
DB_LLMIME_Mimicking_Whitelist_Skills(_Group, _Skill)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_SkillIsAllowed((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
NOT DB_LLMIME_Mimicking_Whitelist_Skills(_, _Skill)
AND
NOT DB_LLMIME_Mimicking_Blacklist_Skills(_, _Skill)
AND
//LeaderLog_QRY_Log("DEBUG", "[LLMIME:QRY_SkillIsAllowed] Checking skill: Name[",_Skill,"] Type[",_SkillType,"] Element[",_SkillElement,"]")
//AND
LLMIME_Mimicking_QRY_Internal_BlockedSkillTypeIsEnabled(_SkillType)
AND
NOT DB_LLMIME_Mimicking_Blacklist_SkillElements(_SkillType, _SkillElement)
AND
NOT LLMIME_Mimicking_QRY_Internal_SkillNameMatchesBlocked(_Skill)
THEN
DB_NOOP(1);
//END_REGION

//REGION WEAPON_SKILLTYPE
QRY
LLMIME_Mimicking_Skills_QRY_IgnoredSkillStringMatch((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Blacklist_WeaponCopy_IgnoreSkillsWith(_Str)
AND
NOT DB_LLMIME_Mimicking_Temp_IgnoredSkill(_Skill)
AND
StringContains(_Skill, _Str, 1)
THEN
DB_LLMIME_Mimicking_Temp_IgnoredSkill(_Skill);

QRY
LLMIME_Mimicking_Skills_QRY_IgnoredSkillStringMatch((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Temp_IgnoredSkill(_Skill)
THEN
NOT DB_LLMIME_Mimicking_Temp_IgnoredSkill(_Skill);

//Only bother with skill types that allow weapon requirements
QRY
LLMIME_Mimicking_Skills_QRY_WeaponSkillTypeMatch((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_SkillTypes(_SkillType)
AND
NOT DB_LLMIME_Mimicking_Temp_WeaponCopyMatch(_Skill)
AND
StringContains(_Skill, _SkillType, 1)
AND
NOT LLMIME_Mimicking_Skills_QRY_IgnoredSkillStringMatch(_Skill)
THEN
LeaderLog_Log("DEBUG", "[LLMIME:Mimicking:MimicAction] [",_Skill,"] is possibly a weapon skill.");
DB_LLMIME_Mimicking_Temp_WeaponCopyMatch(_Skill);

QRY
LLMIME_Mimicking_Skills_QRY_WeaponSkillTypeMatch((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Whitelist_WeaponCopy_Skills(_Skill)
THEN
DB_LLMIME_Mimicking_Temp_WeaponCopyMatch(_Skill);

QRY
LLMIME_Mimicking_Skills_QRY_WeaponSkillTypeMatch((STRING)_Skill)
AND
DB_LLMIME_Mimicking_Temp_WeaponCopyMatch(_Skill)
THEN
NOT DB_LLMIME_Mimicking_Temp_WeaponCopyMatch(_Skill);
//END_REGION

//REGION MIMICKING_QUERIES
QRY
LLMIME_Mimicking_QRY_MimeShouldBeMimicking((CHARACTERGUID)_Mime)
AND
NOT DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime)
AND
DB_GlobalFlag("Mimicry_Mimic_CombatOnlyDisabled")
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_DISABLED", 0)
AND
LLMIME_QRY_MimeHasParty(_Mime)
AND
NOT LeaderLib_Combat_QRY_IsActiveTurn(_Mime)
THEN
DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime);

QRY
LLMIME_Mimicking_QRY_MimeShouldBeMimicking((CHARACTERGUID)_Mime)
AND
NOT DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime)
AND
NOT DB_GlobalFlag("Mimicry_Mimic_CombatOnlyDisabled")
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_DISABLED", 0)
AND
CharacterIsInCombat(_Mime, 1)
AND
LLMIME_QRY_MimeHasParty(_Mime)
AND
NOT LeaderLib_Combat_QRY_IsActiveTurn(_Mime)
THEN
DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime);

QRY
LLMIME_Mimicking_QRY_MimeShouldBeMimicking((CHARACTERGUID)_Mime)
AND
DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime)
THEN
NOT DB_LLMIME_Mimicking_Temp_CanApplyPassed(_Mime);

QRY
LLMIME_Mimicking_QRY_FollowerShouldBeMimicking((CHARACTERGUID)_Mime)
AND
NOT DB_GlobalFlag("Mimicry_Mimic_CombatOnlyDisabled")
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_DISABLED", 0)
AND
CharacterIsInCombat(_Mime, 1)
AND
NOT LeaderLib_Combat_QRY_IsActiveTurn(_Mime)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_FollowerShouldBeMimicking((CHARACTERGUID)_Mime)
AND
DB_GlobalFlag("Mimicry_Mimic_CombatOnlyDisabled")
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_DISABLED", 0)
AND
NOT LeaderLib_Combat_QRY_IsActiveTurn(_Mime)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_MimeIsCurrentlyMimicking((CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
DB_LLMIME_Mimicking_MimicFailTimer(_TimerName, _Mime, _Caster, _Action, _ActionType)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_MimeIsCurrentlyMimicking((CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Mime)
AND
NOT DB_LLMIME_Mimicking_MimicFailTimer(_, _Mime, _, _, _)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 1)
THEN
DB_NOOP(1);
//END_REGION

//REGION CHECK_QUERIES
QRY
LLMIME_Mimicking_QRY_CharacterIsMimickable((CHARACTERGUID)_Character)
AND
DB_IsPlayer(_Character)
AND
NOT LLMIME_QRY_CharacterIsAMime(_Character)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CharacterIsMimickable((CHARACTERGUID)_Character)
AND
NOT DB_IsPlayer(_Character)
AND
CharacterIsPlayer(_Character, 1)
AND
CharacterIsSummon(_Character, 1)
AND
GlobalGetFlag("Mimicry_Mimic_CopySummonedCreatureSkills_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicCharacter((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
LLMIME_Mimicking_QRY_CanMimicCharacter(_Character, _Mime, "", "")
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicCharacter((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime, (STRING)_Action, (STRING)_ActionType)
AND
_Character != _Mime
AND
CharacterIsDeadOrFeign(_Mime, 0)
AND
IsTagged(_Mime, "Mimicry_EnemyMime", 0)
AND
QRY_CharacterIsNotDisabled(_Mime)
AND
LLMIME_Mimicking_QRY_FollowerOwnerMatch(_Character, _Mime)
AND
LLMIME_Mimicking_QRY_CombatConditionsMet(_Character, _Mime)
AND
LLMIME_Mimicking_QRY_PartyConditionsMet(_Character, _Mime)
AND
LLMIME_Mimicking_QRY_CanMimicSummon(_Character)
THEN
DB_NOOP(1);

//Enemy Mime skill mimicking
QRY
LLMIME_Mimicking_QRY_CanMimicCharacter((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime, (STRING)_Skill, (STRING)_SkillType)
AND
_SkillType == "shout"
AND
IsTagged(_Mime, "Mimicry_EnemyMime", 1)
//AND
//NOT LLMIME_Mimicking_QRY_MimeIsCurrentlyMimicking(_Mime)
AND
_Character != _Mime
AND
QRY_CharacterIsNotDisabled(_Mime)
AND
CharacterIsSummon(_Character, 0)
AND
CharacterIsEnemy(_Character, _Mime, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicCharacterWithItem((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime, (ITEMGUID)_Item)
AND
IsTagged(_Mime, "Mimicry_EnemyMime", 0)
AND
LLMIME_Mimicking_QRY_CanMimicCharacter(_Character, _Mime, "", "")
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicCharacterWithItem((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime, (ITEMGUID)_Item)
AND
IsTagged(_Mime, "Mimicry_EnemyMime", 1)
//AND
//NOT LLMIME_Mimicking_QRY_MimeIsCurrentlyMimicking(_Mime)
AND
_Character != _Mime
AND
QRY_CharacterIsNotDisabled(_Mime)
AND
CharacterIsSummon(_Character, 0)
AND
CharacterIsEnemy(_Character, _Mime, 1)
THEN
DB_NOOP(1);

//Mime followers can only mimic their owners
QRY
LLMIME_Mimicking_QRY_FollowerOwnerMatch((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 1)
AND
DB_LeaderLib_PartyFollower(_Character, _Mime)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_FollowerOwnerMatch((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
IsTagged(_Mime, "LLMIME_MimeFollower", 0)
THEN
DB_NOOP(1);

/*
QRY
LLMIME_Mimicking_QRY_CanMimicMime((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
NOT LLMIME_QRY_CharacterIsAMime(_Character)
THEN
DB_NOOP(1);
*/
/*
QRY
LLMIME_Mimicking_QRY_CanMimicMime((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
LLMIME_QRY_CharacterIsAMime(_Character)
AND
NOT LLMIME_Mimicking_QRY_IsMimicking(_Character)
THEN
DB_NOOP(1);
*/

QRY
LLMIME_Mimicking_QRY_CombatConditionsMet((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
GlobalGetFlag("Mimicry_Mimic_CombatOnlyDisabled", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CombatConditionsMet((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
NOT GlobalGetFlag("Mimicry_Mimic_CombatOnlyDisabled", 1)
AND
DB_CombatCharacters(_Character, _CombatID)
AND
DB_CombatCharacters(_Mime, _CombatID) // Same combat as the target to copy
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_PartyConditionsMet((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
GlobalGetFlag("Mimicry_Mimic_PartyOnlyDisabled", 1)
AND
CharacterIsAlly(_Character, _Mime, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_PartyConditionsMet((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
NOT GlobalGetFlag("Mimicry_Mimic_PartyOnlyDisabled", 1)
AND
CharacterIsInPartyWith(_Character, _Mime, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_PartyConditionsMet((CHARACTERGUID)_Character, (CHARACTERGUID)_Mime)
AND
IsTagged(_Mime, "Mimicry_EnemyMime", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicSummon((CHARACTERGUID)_Character)
AND
CharacterIsSummon(_Character, 0)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CanMimicSummon((CHARACTERGUID)_Character)
AND
CharacterIsSummon(_Character, 1)
AND
GlobalGetFlag("Mimicry_Mimic_CopySummonedCreatureSkills_Enabled", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CharacterIsMimickable((CHARACTERGUID)_Character)
AND
CharacterIsPlayer(_Character, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CharacterIsMimickable((CHARACTERGUID)_Character)
AND
CharacterIsPlayer(_Character, 0)
AND
CharacterIsSummon(_Character, 1)
AND
GlobalGetFlag("Mimicry_Mimic_CopySummonedCreatureSkills_Enabled", 1)
AND
CharacterGetOwner(_Character, _Owner)
AND
CharacterIsPlayer(_Owner, 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_MimesAvailable()
AND
DB_LLMIME_Mimicking_MimicNextAction(_Mime)
//AND
//NOT LLMIME_Mimicking_QRY_MimeIsCurrentlyMimicking(_Mime)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CasterAndTargetMatch((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_SkillType)
AND
_SkillType == "Shout"
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_CasterAndTargetMatch((CHARACTERGUID)_Character, (GUIDSTRING)_Target, (STRING)_SkillType)
AND
(GUIDSTRING)_Character == _Target
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_IsMimicking((CHARACTERGUID)_Mime)
AND
ObjectGetFlag(_Mime, "Mimicry_IsMimicking", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_IsMimicking((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_IsMimicking((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_FOLLOWER", 1)
THEN
DB_NOOP(1);

QRY
LLMIME_Mimicking_QRY_IsMimicking((CHARACTERGUID)_Mime)
AND
HasActiveStatus(_Mime, "LLMIME_MIMICKING_ENEMY", 1)
THEN
DB_NOOP(1);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_Mimicry"
